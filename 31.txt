Power Set in Lexicographic order

Difficulty Level : Medium
Last Updated : 05 Aug, 2022
Read
Discuss
Courses
Practice
Video
This article is about generating Power set in lexicographical order. 

Examples : 

Input : abc
Output : a ab abc ac b bc c
Recommended: Please try your approach on {IDE} first, before moving on to the solution.
The idea is to sort array first. After sorting, one by one fix characters and recursively generates all subsets starting from them. After every recursive call, we remove last character so that next permutation can be generated. 

Implementation:

C++
Java
Python3
# Python3 program to generate power
# set in lexicographic order.
 
# str : Stores input string
# n : Length of str.
# curr : Stores current permutation
# index : Index in current permutation, curr
def permuteRec(string, n, index = -1, curr = ""):
 
    # base case
    if index == n:
        return
 
    if len(curr) > 0:
        print(curr)
 
    for i in range(index + 1, n):
        curr += string[i]
        permuteRec(string, n, i, curr)
 
        # backtracking
        curr = curr[:len(curr) - 1]
 
# Generates power set in lexicographic order
def powerSet(string):
    string = ''.join(sorted(string))
    permuteRec(string, len(string))
 
# Driver Code
if __name__ == "__main__":
    string = "cab"
    powerSet(string)
 
# This code is contributed by vibhu4agarwal
C#
PHP
Javascript
Output
a ab b c ca cab cb 
Time Complexity: O(n*2n) 
Auxiliary Space: O(1)



Like
Previous
Combinational Sum
Next
Check if a given string is sum-string
Related Articles
1.
Print all permutations in sorted (lexicographic) order
2.
Generating distinct subsequences of a given string in lexicographic order
3.
Find a string in lexicographic order which is in between given two strings
4.
Print a number as string of 'A' and 'B' in lexicographic order
5.
Find all strings in lexicographic order possible by replacing digits with 'x', 'y' or 'z'
6.
Lexicographic rank of a String
7.
Lexicographic rank of a string using STL
8.
Lexicographic rank of a string with duplicate characters
9.
Length of String formed by repeating each character in range [L, R] of given string its lexicographic value times
10.
Find the N-th lexicographic permutation of string using Factoradic method
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
Ashish Kaktan
@Ashish Kaktan
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
Mithun Kumar
vibhu4agarwal
princiraj1992
Rajput-Ji
srivatsa vatsa
maddler
umadevi9616
youmailmahibagi
hardikkoriintern
Article Tags :
Backtracking
Recursion
Strings
Practice Tags :
Backtracking
Recursion
Strings
Report Issue