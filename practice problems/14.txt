Program to evaluate simple expressions

Difficulty Level : Medium
Last Updated : 03 Nov, 2021
Read
Discuss
Courses
Practice
Video
You are given a string that represent an expression of digits and operands. E.g. 1+2*3, 1-2+4. You need to evaluate the string or the expression. NO BODMAS is followed. If the expression is of incorrect syntax return -1. 
Test cases: 
a) 1+2*3 will be evaluated to 9. 
b) 4-2+6*3 will be evaluated to 24. 
c) 1++2 will be evaluated to -1(INVALID). 
Also, in the string spaces can occur. For that case we need to ignore the spaces. Like :- 1*2 -1 is equals to 1.
Source: Amazon Interview Question
It is strongly recommend to minimize the browser and try this yourself first. 
The idea is simple start from the first character and traverse from left to right and check for errors like two consecutive operators and operands. We also keep track of result and update the result while traversing the expression.
Following is the program to evaluate the given expression. 
 

C++
Java
Python3
# Python3 program to evaluate a
# given expression
 
# A utility function to check if
# a given character is operand
def isOperand(c):
  
    return (c >= '0' and c <= '9');
 
# utility function to find
# value of and operand
def value(c):
    return ord(c) - ord('0');
 
# This function evaluates simple
# expressions. It returns -1 if the
# given expression is invalid.
def evaluate(exp):
 
    len1 = len(exp);
     
    # Base Case: Given expression is empty
    if (len1 == 0):
        return -1;
 
    # The first character must be
    # an operand, find its value
    res = value(exp[0]);
 
    # Traverse the remaining
    # characters in pairs
    for i in range(1,len1,2):
        # The next character must be
        # an operator, and next to
        # next an operand
        opr = exp[i];
        opd = exp[i + 1];
 
        # If next to next character
        # is not an operand
        if (isOperand(opd)==False):
            return -1;
 
        # Update result according
        # to the operator
        if (opr == '+'):
            res += value(opd);
        elif (opr == '-'):
            res -= int(value(opd));
        elif (opr == '*'):
            res *= int(value(opd));
        elif (opr == '/'):
            res /= int(value(opd));
 
        # If not a valid operator
        else:
            return -1;
     
    return res;
 
# Driver Code
expr1 = "1+2*5+3";
res = evaluate(expr1);
print(expr1,"is Invalid") if (res == -1) else print("Value of",expr1,"is",res);
 
expr2 = "1+2*3";
res = evaluate(expr2);
print(expr2,"is Invalid") if (res == -1) else print("Value of",expr2,"is",res);
 
expr3 = "4-2+6*3";
res = evaluate(expr3);
print(expr3,"is Invalid") if (res == -1) else print("Value of",expr3,"is",res);
 
expr4 = "1++2";
res = evaluate(expr4);
print(expr4,"is Invalid") if (res == -1) else print("Value of",expr4,"is",res);
 
# This code is contributed by mits
C#
PHP
Javascript
Output: 
 

Value of 1+2*5+3 is 18
Value of 1+2*3 is 9
Value of 4-2+6*3 is 24
1++2 is Invalid
Time Complexity: O(|exp|)

Auxiliary Space: O(1)

The above code doesnâ€™t handle spaces. We can handle spaces by first removing all spaces from the given string. A better solution is to handle spaces in single traversal. This is left as an exercise.
Time Complexity is O(n) where n is length of the given expression.
This article is contributed by Abhishek. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above
 

Recommended
Solve DSA problems on GfG Practice.

Solve Problems




Like
12
Next
Expression Evaluation
Related Articles
1.
Program to evaluate the expression (âˆšX+1)^6 + (âˆšX-1)^6
2.
Queries to evaluate the given equation in a range [L, R]
3.
Evaluate the expression ( N1 * (N - 1)2 * ... * 1N) % (109 + 7)
4.
Find the number of valid parentheses expressions of given length
5.
Check if the given Binary Expressions are valid
6.
What is an Expression and What are the types of Expressions?
7.
Sum of all possible expressions of a numeric string possible by inserting addition operators
8.
Program to find simple interest
9.
Program to find simple moving average
10.
Menu Driven C++ Program for a Simple Calculator
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
Mithun Kumar
avanitrachhadiya2155
rishavmahato348
Article Tags :
Mathematical
Practice Tags :
Mathematical
Improve Article
Report Issue