Find the node with minimum value in a Binary Search Tree

Difficulty Level : Basic
Last Updated : 12 Dec, 2022
Read
Discuss(80+)
Courses
Practice
Video
Write a function to find the node with minimum value in a Binary Search Tree.

Example: 

Input: 
 


first example BST

Output: 8

Input: 
 


second example BST

Output: 10 

Recommended Problem
Minimum element in BST
Binary Search Tree
Tree
+1 more
Microsoft
Solve Problem
Submission count: 1L
Approach: To solve the problem follow the below idea:

This is quite simple. Just traverse the node from root to left recursively until left is NULL. The node whose left is NULL is the node with minimum value

Below is the implementation of the above approach:

C++
C
Java
Python3
# Python3 program to find the node with minimum value in bst
 
# A binary tree node
 
 
class Node:
 
    # Constructor to create a new node
    def __init__(self, key):
        self.data = key
        self.left = None
        self.right = None
 
 
""" Give a binary search tree and a number,
inserts a new node with the given number in
the correct place in the tree. Returns the new
root pointer which the caller should then use
(the standard trick to avoid using reference
parameters). """
 
 
def insert(node, data):
 
    # 1. If the tree is empty, return a new,
    # single node
    if node is None:
        return (Node(data))
 
    else:
        # 2. Otherwise, recur down the tree
        if data <= node.data:
            node.left = insert(node.left, data)
        else:
            node.right = insert(node.right, data)
 
        # Return the (unchanged) node pointer
        return node
 
 
""" Given a non-empty binary search tree, 
return the minimum data value found in that
tree. Note that the entire tree does not need
to be searched. """
 
 
def minValue(node):
    current = node
 
    # loop down to find the leftmost leaf
    while(current.left is not None):
        current = current.left
 
    return current.data
 
 
# Driver code
if __name__ == '__main__':
  root = None
  root = insert(root, 4)
  insert(root, 2)
  insert(root, 1)
  insert(root, 3)
  insert(root, 6)
  insert(root, 5)
 
  # Function call
  print("\nMinimum value in BST is %d" % (minValue(root)))
 
# This code is contributed by Nikhil Kumar Singh(nickzuck_007)
C#
PHP
Javascript
Output
 Minimum value in BST is 1
Time Complexity: O(Height of the BST)
Auxiliary Space: O(1)



Like
Previous
A program to check if a Binary Tree is BST or not
Next
Check if an array represents Inorder of Binary Search tree or not
Related Articles
1.
Find the node with minimum value in a Binary Search Tree using recursion
2.
Complexity of different operations in Binary tree, Binary Search Tree and AVL tree
3.
Minimum swap required to convert binary tree to binary search tree
4.
Find the node with maximum value in a Binary Search Tree
5.
Find the node with maximum value in a Binary Search Tree using recursion
6.
Binary Tree to Binary Search Tree Conversion
7.
Binary Tree to Binary Search Tree Conversion using STL set
8.
Difference between Binary Tree and Binary Search Tree
9.
Search N elements in an unbalanced Binary Search Tree in O(N * logM) time
10.
Binary Search Tree | Set 1 (Search and Insertion)
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Basic
Easy
Normal
Medium
Hard
Expert
Improved By :
shrikanth13
DeepikaPathak
Code_Mech
rathbhupendra
rameshtravel07
amartyaghoshgfg
simmytarika5
karthikshindee
polymatir3j
janardansthox
yashagarwal2852002
Article Tags :
Microsoft
Binary Search Tree
Tree
Practice Tags :
Microsoft
Binary Search Tree
Tree