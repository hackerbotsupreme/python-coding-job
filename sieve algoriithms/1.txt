Sieve of Eratosthenes

Difficulty Level : Medium
Last Updated : 15 Jan, 2023
Read
Discuss(190)
Courses
Practice
Video
 
Given a number n, print all primes smaller than or equal to n. It is also given that n is a small number. 

Example: 

Input : n =10
Output : 2 3 5 7 

Input : n = 20 
Output: 2 3 5 7 11 13 17 19

The sieve of Eratosthenes is one of the most efficient ways to find all primes smaller than n when n is smaller than 10 million or so (Ref Wiki).

Recommended Problem
Sieve of Eratosthenes
Mathematical
sieve
+1 more
VMWare
MAQ Software
+1 more
Solve Problem
Submission count: 44.5K
Following is the algorithm to find all the prime numbers less than or equal to a given integer n by the Eratostheneâ€™s method: 
When the algorithm terminates, all the numbers in the list that are not marked are prime.

Explanation with Example: 



Let us take an example when n = 50. So we need to print all prime numbers smaller than or equal to 50. 

We create a list of all numbers from 2 to 50.  

Sieve1

According to the algorithm we will mark all the numbers which are divisible by 2 and are greater than or equal to the square of it. 

sieve2

Now we move to our next unmarked number 3 and mark all the numbers which are multiples of 3 and are greater than or equal to the square of it.  

SieveofEratosthenes3

We move to our next unmarked number 5 and mark all multiples of 5 and are greater than or equal to the square of it.  

Sieve4

We continue this process and our final table will look like below:  

Sieve5

So the prime numbers are the unmarked ones: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47.

Thanks to Krishan Kumar for providing the above explanation.

Implementation: 

Following is the implementation of the above algorithm. In the following implementation, a boolean array arr[] of size n is used to mark multiples of prime numbers. 

C++
C
Java
Python3
# Python program to print all
# primes smaller than or equal to
# n using Sieve of Eratosthenes
 
 
def SieveOfEratosthenes(n):
 
    # Create a boolean array
    # "prime[0..n]" and initialize
    #  all entries it as true.
    # A value in prime[i] will
    # finally be false if i is
    # Not a prime, else true.
    prime = [True for i in range(n+1)]
    p = 2
    while (p * p <= n):
 
        # If prime[p] is not
        # changed, then it is a prime
        if (prime[p] == True):
 
            # Update all multiples of p
            for i in range(p * p, n+1, p):
                prime[i] = False
        p += 1
 
    # Print all prime numbers
    for p in range(2, n+1):
        if prime[p]:
            print(p)
 
 
# Driver code
if __name__ == '__main__':
    n = 20
    print("Following are the prime numbers smaller"),
    print("than or equal to", n)
    SieveOfEratosthenes(n)
C#
PHP
Javascript
Output
Following are the prime numbers smaller  than or equal to 30
2 3 5 7 11 13 17 19 23 29 
Time Complexity: O(n*log(log(n)))
Auxiliary Space: O(n)

 
C++
Java
Python3
# Python program for the above approach
Primes = [0] * 500001
def SieveOfEratosthenes(n) :
     
    Primes[0] = 1
    i = 3
    while(i*i <= n) :
        if (Primes[i // 2] == 0) :
            for j in range(3 * i, n+1, 2 * i) :
                Primes[j // 2] = 1
                 
        i += 2
         
# Driver Code
if __name__ == "__main__":
 
    n = 100
    SieveOfEratosthenes(n)
    for i in range(1, n+1) :
        if (i == 2) :
            print( i, end = " ")
        elif (i % 2 == 1 and Primes[i // 2] == 0) :
            print( i, end = " ")
     
    # This code is contributed by code_hunt.
C#
Javascript
Output
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 
Time Complexity: O(n*log(log(n)))
Auxiliary Space: O(n)

You may also like to see :  

How is the time complexity of Sieve of Eratosthenes is n*log(log(n))?
Segmented Sieve.
Sieve of Eratosthenes in 0(n) time complexity




Like
479
Previous
Print all subsets of given size of a set
Next
Segmented Sieve
Related Articles
1.
Sieve of Eratosthenes in 0(n) time complexity
2.
Sum of all Primes in a given range using Sieve of Eratosthenes
3.
How is the time complexity of Sieve of Eratosthenes is n*log(log(n))?
4.
Sieve of Atkin
5.
Bitwise Sieve
6.
Number of unmarked integers in a special sieve
7.
Prime Factorization using Sieve O(log n) for multiple queries
8.
Sieve of Sundaram to print all primes smaller than n
9.
Longest sub-array of Prime Numbers using Segmented Sieve
10.
Segmented Sieve
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
Mithun Kumar
radhesh
shivamnayak
diwakarjaiswal880
siddhantj17
mrmgssingh
29AjayKumar
subham348
davidgatea21
januszeko
simranarora5sos
rushil1904
sanjoy_62
dangerahead
pt7957
ukasp
adityakumar129
code_hunt
rishavnitro
gautamgoel962
abhayg0701
sayanc170
Article Tags :
GE
MAQ Software
number-theory
Prime Number
Qualcomm
sieve
VMWare
Dynamic Programming
Mathematical
Practice Tags :
GE
MAQ Software
Qualcomm
VMWare
Dynamic Programming
Mathematical
number-theory
Prime Number
sieve
Sieve
Improve Article
Report Issue