Smallest Difference Triplet from Three arrays

Difficulty Level : Medium
Last Updated : 21 Jul, 2022
Read
Discuss(20+)
Courses
Practice
Video
Three arrays of same size are given. Find a triplet such that maximum – minimum in that triplet is minimum of all the triplets. A triplet should be selected in a way such that it should have one number from each of the three given arrays. 

If there are 2 or more smallest difference triplets, then the one with the smallest sum of its elements should be displayed.

Examples : 

Input : arr1[] = {5, 2, 8}
    arr2[] = {10, 7, 12}
    arr3[] = {9, 14, 6}
Output : 7, 6, 5

Input : arr1[] = {15, 12, 18, 9}
    arr2[] = {10, 17, 13, 8}
    arr3[] = {14, 16, 11, 5}
Output : 11, 10, 9
Note:The elements of the triplet are displayed in non-decreasing order.

Recommended Problem
Happiest Triplet
Arrays
Searching
+3 more
Solve Problem
Submission count: 3.5K
Simple Solution : Consider each an every triplet and find the required smallest difference triplet out of them. Complexity of O(n3).

Efficient Solution: 

Sort the 3 arrays in non-decreasing order.
Start three pointers from left most elements of three arrays.
Now find min and max and calculate max-min from these three elements.
Now increment pointer of minimum element’s array.
Repeat steps 2, 3, 4, for the new set of pointers until any one pointer reaches to its end.
Implementatipon:



C++
Java
Python3
# Python3 implementation of smallest
# difference triplet
 
# Function to find maximum number
def maximum(a, b, c):
    return max(max(a, b), c)
 
# Function to find minimum number
def minimum(a, b, c):
    return min(min(a, b), c)
 
# Finds and prints the smallest
# Difference Triplet
def smallestDifferenceTriplet(arr1, arr2, arr3, n):
 
    # sorting all the three arrays
    arr1.sort()
    arr2.sort()
    arr3.sort()
 
    # To store resultant three numbers
    res_min = 0; res_max = 0; res_mid = 0
 
    # pointers to arr1, arr2,
    # arr3 respectively
    i = 0; j = 0; k = 0
 
    # Loop until one array reaches to its end
    # Find the smallest difference.
    diff = 2147483647
    while (i < n and j < n and k < n):
     
        sum = arr1[i] + arr2[j] + arr3[k]
 
        # maximum number
        max = maximum(arr1[i], arr2[j], arr3[k])
 
        # Find minimum and increment its index.
        min = minimum(arr1[i], arr2[j], arr3[k])
        if (min == arr1[i]):
            i += 1
        else if (min == arr2[j]):
            j += 1
        else:
            k += 1
 
        # Comparing new difference with the
        # previous one and updating accordingly
        if (diff > (max - min)):
         
            diff = max - min
            res_max = max
            res_mid = sum - (max + min)
            res_min = min
         
    # Print result
    print(res_max, ",", res_mid, ",", res_min)
 
# Driver code
arr1 = [5, 2, 8]
arr2 = [10, 7, 12]
arr3 = [9, 14, 6]
n = len(arr1)
smallestDifferenceTriplet(arr1, arr2, arr3, n)
 
# This code is contributed by Anant Agarwal.
C#
PHP
Javascript
Output
7, 6, 5
Time Complexity : O(n log n)
Auxiliary Space: O(1),  since no extra space has been taken.

This article is contributed by Ayush Jauhari. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. 





Like
34
Previous
Find all triplets with zero sum
Next
Searching Algorithms in Java
Related Articles
1.
Minimum sum of absolute differences of pairs in a triplet from three arrays
2.
Find three closest elements from given three sorted arrays
3.
Find three element from given three arrays such that their sum is X | Set 2
4.
Find three element from different three arrays such that a + b + c = sum
5.
Minimize (max(A[i], B[j], C[k]) - min(A[i], B[j], C[k])) of three different sorted arrays
6.
Maximum sum from three arrays such that picking elements consecutively from same is not allowed
7.
Minimize the sum after choosing elements from the given three arrays
8.
Maximize sum by selecting X different-indexed elements from three given arrays
9.
Find numbers present in at least two of the three arrays
10.
Find common elements in three sorted arrays
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
jit_t
i_am_pm
mukesh07
simmytarika5
codewithrathi
hardikkoriintern
rishavk61ns
Article Tags :
Arrays
Searching
Sorting
Practice Tags :
Arrays
Searching
Sorting
Improve Article
Report Issue