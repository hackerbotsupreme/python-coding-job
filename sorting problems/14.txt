Pigeonhole Sort

Difficulty Level : Easy
Last Updated : 12 Jan, 2023
Read
Discuss
Courses
Practice
Video
Pigeonhole sorting is a sorting algorithm that is suitable for sorting lists of elements where the number of elements and the number of possible key values are approximately the same. 
It requires O(n + Range) time where n is number of elements in input array and ‘Range’ is number of possible values in array. 
Working of Algorithm : 

Find minimum and maximum values in array. Let the minimum and maximum values be ‘min’ and ‘max’ respectively. Also find range as ‘max-min+1’. 
 
Set up an array of initially empty “pigeonholes” the same size as of the range.
Visit each element of the array and then put each element in its pigeonhole. An element arr[i] is put in hole at index arr[i] – min.
Start the loop all over the pigeonhole array in order and put the elements from non- empty holes back into the original array.
Comparison with Counting Sort : 
It is similar to counting sort, but differs in that it “moves items twice: once to the bucket array and again to the final destination “. 
 

ps

 

C++
Java
Python3
# Python program to implement Pigeonhole Sort */
 
# source code : "https://en.wikibooks.org/wiki/
#   Algorithm_Implementation/Sorting/Pigeonhole_sort"
def pigeonhole_sort(a):
    # size of range of values in the list
    # (ie, number of pigeonholes we need)
    my_min = min(a)
    my_max = max(a)
    size = my_max - my_min + 1
 
    # our list of pigeonholes
    holes = [0] * size
 
    # Populate the pigeonholes.
    for x in a:
        assert type(x) is int, "integers only please"
        holes[x - my_min] += 1
 
    # Put the elements back into the array in order.
    i = 0
    for count in range(size):
        while holes[count] > 0:
            holes[count] -= 1
            a[i] = count + my_min
            i += 1
             
 
a = [8, 3, 2, 7, 4, 6, 8]
print("Sorted order is : ", end = ' ')
 
pigeonhole_sort(a)
         
for i in range(0, len(a)):
    print(a[i], end = ' ')
    
C#
Javascript
Output: 
 

Sorted order is : 2 3 4 6 7 8 8 
Pigeonhole sort has limited use as requirements are rarely met. For arrays where range is much larger than n, bucket sort is a generalization that is more efficient in space and time.

Advantages of Pigeonhole sort:



It is a non-comparison based sort making it faster in application.
It is a stable sorting algorithm.
It performs sorting in linear time.
Disadvantages of Pigeonhole sort:

It is not easy to know the range of the numbers to sort.
This number might only work with zero and positive integers.
 
References: 
https://en.wikipedia.org/wiki/Pigeonhole_sort
This article is contributed Ayush Govil. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above

Other Sorting Algorithms on GeeksforGeeks/GeeksQuiz 
Selection Sort, Bubble Sort, Insertion Sort, Merge Sort, Heap Sort, QuickSort, Radix Sort, Counting Sort, Bucket Sort, ShellSort, Comb Sort, 
 

Recommended
Solve DSA problems on GfG Practice.

Solve Problems




Like
27
Next
Cycle Sort
Related Articles
1.
C++ Program for Pigeonhole Sort
2.
Java Program for Pigeonhole Sort
3.
Mathematics | The Pigeonhole Principle
4.
Comparison among Bubble Sort, Selection Sort and Insertion Sort
5.
Why Quick Sort preferred for Arrays and Merge Sort for Linked Lists?
6.
Bucket Sort To Sort an Array with Negative Numbers
7.
Sort all even numbers in ascending order and then sort all odd numbers in descending order
8.
Program to sort an array of strings using Selection Sort
9.
C/C++ Program for Odd-Even Sort / Brick Sort
10.
Java Program for Odd-Even Sort / Brick Sort
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Easy
Easy
Normal
Medium
Hard
Expert
Improved By :
Sam007
lakhan007
target_2
arorapranay
itskawal2000
Article Tags :
Pigeonhole Principle
Sorting
Practice Tags :
Sorting