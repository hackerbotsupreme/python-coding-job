Sort an array when two halves are sorted

Difficulty Level : Easy
Last Updated : 06 Jul, 2022
Read
Discuss
Courses
Practice
Video
Given an integer array of which both first half and second half are sorted. Task is to merge two sorted halves of array into single sorted array.

Examples: 

Input : A[] = { 2, 3, 8, -1, 7, 10 }
Output : -1, 2, 3, 7, 8, 10 

Input : A[] = {-4, 6, 9, -1, 3 }
Output : -4, -1, 3, 6, 9
Recommended Problem
Sort the Half Sorted
two-pointer-algorithm
Sorting
+1 more
Solve Problem
Submission count: 7.3K
Method 1: A Simple Solution is to sort the array using built in functions (generally an implementation of quick sort). 

Below is the implementation of above method:

C++
Java
Python3
# Python program to Merge two sorted
# halves of array Into Single Sorted Array
 
 
def mergeTwoHalf(A, n):
 
    # Sort the given array using sort STL
    A.sort()
 
 
# Driver Code
if __name__ == '__main__':
    A = [2, 3, 8, -1, 7, 10]
    n = len(A)
    mergeTwoHalf(A, n)
 
    # Print sorted Array
    for i in range(n):
        print(A[i], end=" ")
 
# This code is contributed by 29AjayKumar
C#
PHP
Javascript
Output
-1 2 3 7 8 10 
Time Complexity: 

*** QuickLaTeX cannot compile formula:
 

*** Error message:
Error: Nothing to show, formula is empty
best & average case, O(n^2)    worst case (for quicksort)
Space Complexity: 

*** QuickLaTeX cannot compile formula:
 

*** Error message:
Error: Nothing to show, formula is empty
to 

*** QuickLaTeX cannot compile formula:
 

*** Error message:
Error: Nothing to show, formula is empty
depending on the case & implementation (for quicksort)

For more details, check out the GFG article on Quicksort.

Method 2: A more efficient solution is to use an auxiliary array which is very similar to the Merge Function of Merge sort. 

Below is the implementation of above approach : 

C++
Java
Python3
# Python3 program to Merge Two Sorted Halves Of
# Array Into Single Sorted Array
 
# Merge two sorted halves of Array into single
# sorted array
def mergeTwoHalf(A, n):
     
    # Starting index of second half
    half_i = 0   
 
    # Temp Array store sorted resultant array
    temp = [0 for i in range(n)]
 
    # First Find the point where array is
    # divide into two half
    for i in range(n - 1):
        if (A[i] > A[i + 1]):
            half_i = i + 1
            break
 
    # If Given array is all-ready sorted
    if (half_i == 0):
        return
 
    # Merge two sorted arrays in single
    # sorted array
    i = 0
    j = half_i
    k = 0
     
    while (i < half_i and j < n):
        if (A[i] < A[j]):
            temp[k] = A[i]
            k += 1
            i += 1
        else:
            temp[k] = A[j]
            k += 1
            j += 1
     
    # Copy the remaining elements of A[i to half_! ]
    while i < half_i:
        temp[k] = A[i]
        k += 1
        i += 1
 
    # Copy the remaining elements of A[ half_! to n ]
    while (j < n):
        temp[k] = A[j]
        k += 1
        j += 1
 
    for i in range(n):
        A[i] = temp[i]
 
# Driver code
A = [ 2, 3, 8, -1, 7, 10 ]
n = len(A)
 
mergeTwoHalf(A, n)
 
# Print sorted Array
print(*A, sep = ' ')
 
# This code is contributed by avanitrachhadiya2155
C#
Javascript
Output
-1 2 3 7 8 10 
Time Complexity: 

*** QuickLaTeX cannot compile formula:
 

*** Error message:
Error: Nothing to show, formula is empty
Space Complexity: 

*** QuickLaTeX cannot compile formula:
 

*** Error message:
Error: Nothing to show, formula is empty
If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.



Like
Previous
Choose k array elements such that difference of maximum and minimum is minimized
Next
Find pair with greatest product in array
Related Articles
1.
Sort a nearly sorted (or K sorted) array | Set 2 (Gap method - Shell sort)
2.
Find array sum using Bitwise OR after splitting given array in two halves after K circular shifts
3.
C++ Program to Find array sum using Bitwise OR after splitting given array in two halves after K circular shifts
4.
Java Program to Find array sum using Bitwise OR after splitting given array in two halves after K circular shifts
5.
Python3 Program to Find array sum using Bitwise OR after splitting given array in two halves after K circular shifts
6.
Javascript Program to Find array sum using Bitwise OR after splitting given array in two halves after K circular shifts
7.
Dividing an array into two halves of same sum
8.
Count number of ways to divide an array into two halves with same sum
9.
Maximize difference between the Sum of the two halves of the Array after removal of N elements
10.
Determine if possible to get Array by breaking rod segments into two halves
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Easy
Easy
Normal
Medium
Hard
Expert
Improved By :
vt_m
29AjayKumar
Akanksha_Rai
Es
jelodar
parascoding
divyeshrabadiya07
divyesh072019
avanitrachhadiya2155
splevel62
mukesh07
itsok
surindertarika1234
rub1cks
amartyaghoshgfg
hardikkoriintern
Article Tags :
Merge Sort
Arrays
Sorting
Practice Tags :
Arrays
Merge Sort
Sorting
Report Issue