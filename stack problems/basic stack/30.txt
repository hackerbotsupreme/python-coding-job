How to Reverse a Stack using Recursion

Difficulty Level : Medium
Last Updated : 02 Dec, 2022
Read
Discuss(230+)
Courses
Practice
Video
Write a program to reverse a stack using recursion, without using any loop.

Example: 

Input: elements present in stack from top to bottom 1 2 3 4 
Output: 4 3 2 1 

Input: elements present in stack from top to bottom 1 2 3
Output: 3 2 1

Recommended Problem
Reverse a Stack
Recursion
Stack
+2 more
Solve Problem
Submission count: 16.4K
Reverse a stack using Recursion
The idea of the solution is to hold all values in Function Call Stack until the stack becomes empty. When the stack becomes empty, insert all held items one by one at the bottom of the stack. 

Illustration: 

Below is the illustration of the above approach



Let given stack be
       1        
       2
       3
       4
    

After all calls of reverse,  4 will be passed to function insert at bottom, after that 4 will pushed to the stack when stack is empty
    

        4       
Then 3 will be passed to function insert at bottom , it will check if the stack is empty or not if not then pop all the elements back and insert 3 and then push other elements back.
                                                                                           
       4       
       3
Then 2 will be passed to function insert at bottom , it will check if the stack is empty or not if not then pop all the elements back and insert 2 and then push other elements back.
      4       
      3
      2
Then 1 will be passed to function insert at bottom , it will check if the stack is empty or not if not then pop all the elements back and insert 1 and then push other elements back.
 
      4       
      3
      2
      1
 Follow the steps mentioned below to implement the idea:

Create a stack and push all the elements in it.
Call reverse(), which will pop all the elements from the stack and pass the popped element to function insert_at_bottom()
Whenever insert_at_bottom() is called it will insert the passed element at the bottom of the stack.
Print the stack                             
Below is the implementation of the above approach:

C++
C
Java
Python3
# Python program to reverse a
# stack using recursion
 
# Below is a recursive function
# that inserts an element
# at the bottom of a stack.
 
 
def insertAtBottom(stack, item):
    if isEmpty(stack):
        push(stack, item)
    else:
        temp = pop(stack)
        insertAtBottom(stack, item)
        push(stack, temp)
 
# Below is the function that
# reverses the given stack
# using insertAtBottom()
 
 
def reverse(stack):
    if not isEmpty(stack):
        temp = pop(stack)
        reverse(stack)
        insertAtBottom(stack, temp)
 
# Below is a complete running
# program for testing above
# functions.
 
# Function to create a stack.
# It initializes size of stack
# as 0
 
 
def createStack():
    stack = []
    return stack
 
# Function to check if
# the stack is empty
 
 
def isEmpty(stack):
    return len(stack) == 0
 
# Function to push an
# item to stack
 
 
def push(stack, item):
    stack.append(item)
 
# Function to pop an
# item from stack
 
 
def pop(stack):
 
    # If stack is empty
    # then error
    if(isEmpty(stack)):
        print("Stack Underflow ")
        exit(1)
 
    return stack.pop()
 
# Function to print the stack
 
 
def prints(stack):
    for i in range(len(stack)-1, -1, -1):
        print(stack[i], end=' ')
    print()
 
# Driver Code
 
 
stack = createStack()
push(stack, str(4))
push(stack, str(3))
push(stack, str(2))
push(stack, str(1))
print("Original Stack ")
prints(stack)
 
reverse(stack)
 
print("Reversed Stack ")
prints(stack)
 
# This code is contributed by Sunny Karira
C#
Javascript
Output
Original Stack
4 3 2 1 
Reversed Stack
1 2 3 4 
Time Complexity: O(N2). 
Auxiliary Space: O(N) use of Stack 





Like
259
Previous
Implement a stack using single queue
Next
How to Sort a Stack using Recursion
Related Articles
1.
C Program to Reverse a Stack using Recursion
2.
Why is Tail Recursion optimization faster than normal Recursion?
3.
How to Sort a Stack using Recursion
4.
Print Fibonacci Series in reverse order using Recursion
5.
C Program to reverse the digits of a number using recursion
6.
Reverse a Doubly linked list using recursion
7.
Sort a stack using a temporary stack
8.
Infix to Postfix using different Precedence Values for In-Stack and Out-Stack
9.
Find maximum in stack in O(1) without using additional stack
10.
Reverse a number using stack
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
SBanzal
andrew1234
pavanareti02
simranarora5sos
avanitrachhadiya2155
surinderdawra388
samartajshaikh
technophpfij
garvitpr1hev
asmashaik2002
harendrakumar123
AbhishekRamanaujan
Article Tags :
Reverse
Recursion
Stack
Practice Tags :
Recursion
Reverse
Stack
Improve Article
Report Issue