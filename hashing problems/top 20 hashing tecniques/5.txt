Find four elements a, b, c and d in an array such that a+b = c+d

Difficulty Level : Medium
Last Updated : 23 Jan, 2023
Read
Discuss(60+)
Courses
Practice
Video
Given an array of distinct integers, find if there are two pairs (a, b) and (c, d) such that a+b = c+d, and a, b, c and d are distinct elements. If there are multiple answers, then print any of them.
 

Example: 

Input:   {3, 4, 7, 1, 2, 9, 8}
Output:  (3, 8) and (4, 7)
Explanation: 3+8 = 4+7

Input:   {3, 4, 7, 1, 12, 9};
Output:  (4, 12) and (7, 9)
Explanation: 4+12 = 7+9

Input:  {65, 30, 7, 90, 1, 9, 8};
Output:  No pairs found
Expected Time Complexity: O(n2)
 

Recommended Problem
Sum equals to Sum
Arrays
Hash
+1 more
Amazon
OYO Rooms
Solve Problem
Submission count: 15K
A Simple Solution is to run four loops to generate all possible quadruples of the array elements. For every quadruple (a, b, c, d), check if (a+b) = (c+d). The time complexity of this solution is O(n4).
An Efficient Solution can solve this problem in O(n2) time. The idea is to use hashing. We use sum as key and pair as the value in the hash table. 
 

Loop i = 0 to n-1 :
    Loop j = i + 1 to n-1 :
        calculate sum
        If in hash table any index already exist
            Then print (i, j) and previous pair 
            from hash table  
        Else update hash table
    EndLoop;
EndLoop;
Below are implementations of the above idea. In the below implementation, the map is used instead of a hash. The time complexity of map insert and search is actually O(Log n) instead of O(1). So below implementation is O(n2 Log n).

C++
Java
Python3
# Python Program to find four different elements a,b,c and d of
# array such that a+b = c+d
 
# function to find a, b, c, d such that
# (a + b) = (c + d)
 
 
def find_pair_of_sum(arr: list, n: int):
    map = {}
 
    for i in range(n):
        for j in range(i+1, n):
            sum = arr[i] + arr[j]
 
            if sum in map:
                print(f"{map[sum]} and ({arr[i]}, {arr[j]})")
                return
            else:
                map[sum] = (arr[i], arr[j])
 
 
# Driver code
if __name__ == "__main__":
    arr = [3, 4, 7, 1, 2, 9, 8]
    n = len(arr)
    find_pair_of_sum(arr, n)
C#
Javascript
Output: 
 

(3, 8) and (4, 7)
Time Complexity : O(n2 logn)



Auxiliary Space: O(n)

Thanks to Gaurav Ahirwar for suggesting above solutions.
Exercise: 
1) Extend the above solution with duplicates allowed in array. 
2) Further extend the solution to print all quadruples in output instead of just one. And all quadruples should be printed  in lexicographical order (smaller values before greater ones). Assume we have two solutions S1 and S2. 
 

S1 : a1 b1 c1 d1 ( these are values of indices in the array )  
S2 : a2 b2 c2 d2

S1 is lexicographically smaller than S2 if
  a1 < a2 OR
  a1 = a2 AND b1 < b2 OR
  a1 = a2 AND b1 = b2 AND c1 < c2 OR 
  a1 = a2 AND b1 = b2 AND c1 = c2 AND d1 < d2 
See this for solution of exercise.

This article is contributed by Aarti_Rathi. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.
Related Article : 
Find all pairs (a,b) and (c,d) in array which satisfy ab = cd
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above
 





Like
23
Previous
Print array elements that are divisible by at-least one other
Next
Printing longest Increasing consecutive subsequence
Related Articles
1.
Minimum sum subsequence such that at least one of every four consecutive elements is picked
2.
Find four missing numbers in an array containing elements from 1 to N
3.
Find four elements that sum to a given value | Set 1 (n^3 solution)
4.
Find four elements that sum to a given value | Set 2
5.
Find four elements that sum to a given value | Two-Pointer approach
6.
Find four elements that sum to a given value | Set 3 (Hashmap)
7.
Count all Quadruples from four arrays such that their XOR equals to 'x'
8.
Minimum sum obtained from groups of four elements from the given array
9.
Maximum area rectangle by picking four sides from array
10.
Optimal partition of an array into four parts
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
shrikanth13
gfgking
shindesharad71
sagartomar9927
codewithmini
ruhelaa48
mitalibhola94
Article Tags :
Amazon
Arrays
Hash
Practice Tags :
Amazon
Arrays
Hash