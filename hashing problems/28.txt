Longest subarray with sum divisible by K

Difficulty Level : Hard
Last Updated : 27 Jan, 2023
Read
Discuss(20+)
Courses
Practice
Video
Given an arr[] containing n integers and a positive integer k. The problem is to find the longest subarray’s length with the sum of the elements divisible by the given value k.

Examples:

Input: arr[] = {2, 7, 6, 1, 4, 5}, k = 3
Output: 4
Explanation: The subarray is {7, 6, 1, 4} with sum 18, which is divisible by 3.

Input: arr[] = {-2, 2, -5, 12, -11, -1, 7}, k = 3
Output: 5

Recommended Problem
Longest subarray with sum divisible by K
prefix-sum
sliding-window
+4 more
Microsoft
Snapdeal
Solve Problem
Submission count: 38.3K
Method 1 (Naive Approach): Consider all the subarrays and return the length of the subarray with a sum divisible by k that has the longest length. 

C++
Java
C#
Python3
# Python3 implementation to find the longest subarray
# with sum divisible by k
 
def longestSubarrWthSumDivByK(arr, N, k):
    maxl = 0
    for i in range(N):
        sum1 = 0
        for j in range(i, N):
            sum1 += arr[j]
            if sum1 % k == 0:
                maxl = max(maxl, j - i + 1)
    return maxl
 
# Driver code
arr = [2, 7, 6, 1, 4, 5]
n = len(arr)
k = 3
 
print("Length =", longestSubarrWthSumDivByK(arr, n, k))
Output
Length = 4
Time Complexity: O(n2).
Auxiliary Space: O(1)



Method 2 (Efficient Approach): Create an array mod_arr[] where mod_arr[i] stores (sum(arr[0]+arr[1]..+arr[i]) % k). Create a hash table having tuple as (ele, i), where ele represents an element of mod_arr[] and i represents the element’s index of first occurrence in mod_arr[]. Now, traverse mod_arr[] from i = 0 to n and follow the steps given below.

If mod_arr[i] == 0, then update max_len = (i + 1).
Else if mod_arr[i] is not present in the hash table, then create tuple (mod_arr[i], i) in the hash table.
Else, get the hash table’s value associated with mod_arr[i]. Let this be i.
If maxLen < (i – idx), then update max_len = (i – idx).
Finally, return max_len.
Below is the implementation of the above approach:

C++
Java
Python3
# Python3 implementation to find the
# longest subarray with sum divisible by k
 
# Function to find the longest
# subarray with sum divisible by k
 
 
def longestSubarrWthSumDivByK(arr, n, k):
 
    # unordered map 'um' implemented
    # as hash table
    um = {}
 
    # 'mod_arr[i]' stores (sum[0..i] % k)
    mod_arr = [0 for i in range(n)]
    max_len = 0
    curr_sum = 0
 
    # Traverse arr[] and build up
    # the array 'mod_arr[]'
    for i in range(n):
        curr_sum += arr[i]
 
        # As the sum can be negative,
        # taking modulo twice
        mod_arr[i] = ((curr_sum % k) + k) % k
 
        # If true then sum(0..i) is
        # divisible by k
        if (mod_arr[i] == 0):
 
            # Update 'max_len'
            max_len = i + 1
 
        # If value 'mod_arr[i]' not present in
        # 'um' then store it in 'um' with index
        # of its first occurrence
        elif (mod_arr[i] not in um):
            um[mod_arr[i]] = i
 
        else:
              # If true, then update 'max_len'
            if (max_len < (i - um[mod_arr[i]])):
                max_len = i - um[mod_arr[i]]
 
    # Return the required length of longest subarray
    # with sum divisible by 'k'
    return max_len
 
 
# Driver Code
if __name__ == '__main__':
 
    arr = [2, 7, 6, 1, 4, 5]
    n = len(arr)
    k = 3
 
    print("Length =",
          longestSubarrWthSumDivByK(arr, n, k))
 
# This code is contributed by Surendra_Gangwar, updated by Kshitij Dwivedi
C#
Javascript
Output
Length = 4
Time Complexity: O(n), as we traverse the input array only once.
Auxiliary Space: O(n  + k), O(n) for mod_arr[], and O(k) for storing the remainder values in the hash table.

Space Optimized approach: The space optimization for the above approach to O(n) Instead of keeping a separate array to store the modulus of all values, we compute it on the go and store remainders in the hash table.

Below is the implementation of the above approach:

C++
Java
Python3
# function to find the longest subarray
#  with sum divisible by k
 
 
def longestSubarrWthSumDivByK(arr, n, k):
 
    # unordered map 'um' implemented as
    # hash table
    um = {}
 
    max_len = 0
    curr_sum = 0
 
    for i in range(n):
 
        curr_sum += arr[i]
        mod = ((curr_sum % k) + k) % k
        # if true then sum(0..i) is divisible by k
 
        if mod == 0:
            # update 'max_len'
            max_len = i + 1
 
        # if value 'mod_arr[i]' not present in 'um'
        # then store it in 'um' with index of its
        # first occurrence
        elif mod in um.keys():
            if max_len < (i - um[mod]):
                max_len = i - um[mod]
 
        else:
            um[mod] = i
 
    # return the required length of longest subarray with
    # sum divisible by 'k'
    return max_len
 
 
arr = [2, 7, 6, 1, 4, 5]
n = len(arr)
k = 3
print("Length =", longestSubarrWthSumDivByK(arr, n, k))
 
# This code is contributed by amreshkumar3, and updated by Kshitij Dwivedi
C#
Javascript
Output
Length = 4
Time Complexity: O(n), as we traverse the input array only once.
Auxiliary Space: O(min(n,k))





Like
55
Previous
Count all sub-arrays having sum divisible by k
Next
Subarray with no pair sum divisible by K
Related Articles
1.
Longest subarray with sum not divisible by X
2.
Length of longest subarray whose sum is not divisible by integer K
3.
Longest subarray with elements divisible by k
4.
First subarray having sum at least half the maximum sum of any subarray of size K
5.
Subarray with no pair sum divisible by K
6.
Find a subarray whose sum is divisible by size of the array
7.
Length of smallest subarray to be removed to make sum of remaining elements divisible by K
8.
Generate an N-length array having sum of each subarray divisible by K
9.
Count ways to split an array into subarrays such that sum of the i-th subarray is divisible by i
10.
Longest subsequence whose sum is divisible by a given number
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
ayushjauhari14
@ayushjauhari14
Vote for difficulty
Current difficulty : Hard
Easy
Normal
Medium
Hard
Expert
Improved By :
rex_wulf
shrikanth13
SURENDRA_GANGWAR
throne1032
1999shaswat
rrrtnx
surindertarika1234
ayush123ngp
amreshkumar3
shinjanpatra
ishankhandelwals
kshitijdwivedi28
harendrakumar123
hardikkoriintern
ashwinichourasiavns
avarpit100
simmytarika5
surinderdawra388
ssourabh025
111arpit1
hkdass001
karandeep1234
factworx4i2
Article Tags :
Snapdeal
subarray
subarray-sum
Arrays
Hash
Practice Tags :
Snapdeal
Arrays
Hash