Recaman’s sequence

Difficulty Level : Easy
Last Updated : 27 Aug, 2022
Read
Discuss
Courses
Practice
Video
Given an integer n. Print first n elements of Recaman’s sequence.
Examples: 
 

Input : n = 6
Output : 0, 1, 3, 6, 2, 7

Input  : n = 17
Output : 0, 1, 3, 6, 2, 7, 13, 20, 12, 21, 
         11, 22, 10, 23, 9, 24, 8
It is basically a function with domain and co-domain as natural numbers and 0. It is recursively defined as below: 
Specifically, let a(n) denote the (n+1)-th term. (0 is already there). 
The rule says: 

a(0) = 0,
if n > 0 and the number is not 
   already included in the sequence,
     a(n) = a(n - 1) - n 
else 
     a(n) = a(n-1) + n. 
 

Recommended: Please solve it on “PRACTICE” first, before moving on to the solution.
Below is a simple implementation where we store all n Recaman Sequence numbers in an array. We compute the next number using the recursive formula mentioned above. 
 

C++
Java
Python 3
# Python 3 program to print n-th
# number in Recaman's sequence
 
# Prints first n terms of Recaman
# sequence
def recaman(n):
 
    # Create an array to store terms
    arr = [0] * n
 
    # First term of the sequence
    # is always 0
    arr[0] = 0
    print(arr[0], end=", ")
 
    # Fill remaining terms using
    # recursive formula.
    for i in range(1, n):
     
        curr = arr[i-1] - i
        for j in range(0, i):
         
            # If arr[i-1] - i is
            # negative or already
            # exists.
            if ((arr[j] == curr) or curr < 0):
                curr = arr[i-1] + i
                break
             
        arr[i] = curr
        print(arr[i], end=", ")
 
# Driver code
n = 17
 
recaman(n)
 
# This code is contributed by Smitha.
C#
PHP
Javascript
Output:  

0, 1, 3, 6, 2, 7, 13, 20, 12, 21, 11, 22, 10, 23, 9, 24, 8, 
Time Complexity : O(n2) 
Auxiliary Space : O(n), since n extra space has been added
Optimizations : 
We can use hashing to store previously computed values and can make this program work in O(n) time. 
 

C++
Java
Python3
# Python3 program to print n-th number in
# Recaman's sequence
 
# Prints first n terms of Recaman sequence
def recaman(n):
 
    if(n <= 0):
        return
 
    # Print first term and store it in a hash
    print(0, ",", end='')
    s = set([])
    s.add(0)
 
    # Print remaining terms using recursive
    # formula.
    prev = 0
    for i in range(1, n):
 
        curr = prev - i
 
        # If arr[i-1] - i is negative or
        # already exists.
        if(curr < 0 or curr in s):
            curr = prev + i
 
        s.add(curr)
 
        print(curr, ",", end='')
        prev = curr
 
# Driver code
if __name__=='__main__':
    n = 17
    recaman(n)
 
# This code is contributed by
# Sanjit_Prasad
C#
PHP
Javascript
Output: 
 



0, 1, 3, 6, 2, 7, 13, 20, 12, 21, 11, 22, 10, 23, 9, 24, 8, 
Time Complexity : O(n) 
Auxiliary Space : O(n), since n extra space has been taken.
This article is contributed by Kishlay Verma. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.
 





Like
6
Previous
C++ program for hashing with chaining
Next
Find All Duplicate Subtrees
Related Articles
1.
k-th missing element in increasing sequence which is not present in a given sequence
2.
Minimum operations required to transform a sequence of numbers to a sequence where a[i]=a[i+2]
3.
Generate a sequence X from given sequence Y such that Yi = gcd(X1, X2 , ... , Xi)
4.
Count Possible Decodings of a given Digit Sequence
5.
Look-and-Say Sequence
6.
Farey Sequence
7.
Find Recurring Sequence in a Fraction
8.
G-Fact 21 | Collatz Sequence
9.
Longest consecutive sequence in Binary tree
10.
Juggler Sequence
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Easy
Easy
Normal
Medium
Hard
Expert
Improved By :
Smitha Dinesh Semwal
jit_t
Sanjit_Prasad
Chandan_Kumar
Rajput-Ji
princi singh
mukesh07
avijitmondal1998
sweetyty
rishavpgl4
souravkumar29
Article Tags :
series
Hash
Mathematical
Recursion
Practice Tags :
Hash
Mathematical
Recursion
series
Improve Article
Report Issue