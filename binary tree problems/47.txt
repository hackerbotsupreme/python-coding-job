Convert a tree to forest of even nodes

Difficulty Level : Hard
Last Updated : 20 Dec, 2022
Read
Discuss
Courses
Practice
Video
Given a tree of n even nodes. The task is to find the maximum number of edges to be removed from the given tree to obtain forest of trees having even number of nodes. This problem is always solvable as given graph has even nodes.

Examples: 

Input : n = 10
Edge 1: 1 3
Edge 2: 1 6
Edge 3: 1 2
Edge 4: 3 4
Edge 5: 6 8
Edge 6: 2 7
Edge 7: 2 5
Edge 8: 4 9
Edge 9: 4 10

Output : 2

By removing 2 edges we can obtain the forest with even node tree.


Dotted line shows removed edges. Any further removal of edge will not satisfy 
the even nodes condition.
Recommended: Please try your approach on {IDE} first, before moving on to the solution.
Find a subtree with even number of nodes and remove it from rest of tree by removing the edge connecting it. After removal, we are left with tree with even node only because initially we have even number of nodes in the tree and removed subtree has also even node. Repeat the same procedure until we left with the tree that cannot be further decomposed in this manner.

To do this, the idea is to use Depth First Search to traverse the tree. Implement DFS function in such a manner that it will return number of nodes in the subtree whose root is node on which DFS is performed. If the number of nodes is even then remove the edge, else ignore.

Below is implementation of this approach: 

C++
Java
Python3
# Python3 program to find maximum
# number to be removed to convert
# a tree into forest containing trees
# of even number of nodes
 
# Return the number of nodes of 
# subtree having node as a root.
def dfs(tree, visit, ans, node):
    num = 0
    temp = 0
 
    # Mark node as visited.
    visit[node] = 1
 
    # Traverse the adjacency list 
    # to find non-visited node.
    for i in range(len(tree[node])):
        if (visit[tree[node][i]] == 0):
             
            # Finding number of nodes of
            # the subtree of a subtree.
            temp = dfs(tree, visit, ans,
                          tree[node][i])
 
            # If nodes are even, increment
            # number of edges to removed.
            # Else leave the node as child
            # of subtree.
            if(temp % 2):
                num += temp
            else:
                ans[0] += 1
 
    return num + 1
 
# Return the maximum number of
# edge to remove to make forest.
def minEdge(tree, n):
    visit = [0] * (n + 2)
    ans = [0]
    dfs(tree, visit, ans, 1)
 
    return ans[0]
 
# Driver Code
N = 12
n = 10
 
tree = [[] for i in range(n + 2)]
tree[1].append(3)
tree[3].append(1)
 
tree[1].append(6)
tree[6].append(1)
 
tree[1].append(2)
tree[2].append(1)
 
tree[3].append(4)
tree[4].append(3)
 
tree[6].append(8)
tree[8].append(6)
 
tree[2].append(7)
tree[7].append(2)
 
tree[2].append(5)
tree[5].append(2)
 
tree[4].append(9)
tree[9].append(4)
 
tree[4].append(10)
tree[10].append(4)
 
print(minEdge(tree, n))
 
# This code is contributed by pranchalK
C#
Javascript
Output


2
Time Complexity: O(n).
Auxiliary Space: O(n).

This article is contributed by Anuj Chauhan. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. 





Like
13
Next
Convert a given Binary tree to a tree that holds Logical AND property
Related Articles
1.
Maximum edge removal from tree to make even forest
2.
Minimize deletion of edges to convert Tree into a forest of size at most N/2
3.
Node whose removal minimizes the maximum size forest from an N-ary Tree
4.
Modify Binary Tree by replacing all nodes at even and odd levels by their nearest even or odd perfect squares respectively
5.
Print even positioned nodes of even levels in level order of the given binary tree
6.
Count the nodes of the tree which make a pangram when concatenated with the sub-tree nodes
7.
Count number of trees in a forest
8.
Size of the Largest Trees in a Forest formed by the given Graph
9.
Convert given Binary Tree to Symmetric Tree by adding minimum number of nodes
10.
Print levels with odd number of nodes and even number of nodes
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Hard
Easy
Normal
Medium
Hard
Expert
Improved By :
PranchalKatiyar
andrew1234
Rajput-Ji
arorakashish0911
itsok
hardikkoriintern
surajrasr7277
Article Tags :
DFS
Tree
Practice Tags :
DFS
Tree
Improve Article
Report Issue