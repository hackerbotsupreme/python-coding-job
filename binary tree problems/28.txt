Check if two nodes are cousins in a Binary Tree

Difficulty Level : Medium
Last Updated : 23 Jun, 2022
Read
Discuss(130+)
Courses
Practice
Video
Given the binary Tree and the two nodes say ‘a’ and ‘b’, determine whether the two nodes are cousins of each other or not.
Two nodes are cousins of each other if they are at same level and have different parents.

Example: 

     6
   /   \
  3     5
 / \   / \
7   8 1   3
Say two node be 7 and 1, result is TRUE.
Say two nodes are 3 and 5, result is FALSE.
Say two nodes are 7 and 5, result is FALSE.
Recommended Problem
Check if two Nodes are Cousins
Tree
Data Structures
Amazon
D-E-Shaw
Solve Problem
Submission count: 30.8K
The idea is to find level of one of the nodes. Using the found level, check if ‘a’ and ‘b’ are at this level. If ‘a’ and ‘b’ are at given level, then finally check if they are not children of same parent.
Following is the implementation of the above approach.

C++
C
Java
Python3
# Python program to check if two nodes in a binary
# tree are cousins
 
# A Binary Tree Node
class Node:
     
    # Constructor to create a new Binary Tree
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None
 
def isSibling(root, a , b):
 
    # Base Case
    if root is None:
        return 0
 
    return ((root.left == a and root.right ==b) or
            (root.left == b and root.right == a)or
            isSibling(root.left, a, b) or
            isSibling(root.right, a, b))
 
# Recursive function to find level of Node 'ptr' in
# a binary tree
def level(root, ptr, lev):
     
    # Base Case
    if root is None :
        return 0
    if root == ptr:
        return lev
 
    # Return level if Node is present in left subtree
    l = level(root.left, ptr, lev+1)
    if l != 0:
        return l
 
    # Else search in right subtree
    return level(root.right, ptr, lev+1)
 
 
# Returns 1 if a and b are cousins, otherwise 0
def isCousin(root,a, b):
     
    # 1. The two nodes should be on the same level in
    # the binary tree
    # The two nodes should not be siblings(means that
    # they should not have the same parent node
 
    if ((level(root,a,1) == level(root, b, 1)) and
            not (isSibling(root, a, b))):
        return 1
    else:
        return 0
 
 
# Driver program to test above function
root = Node(1)
root.left = Node(2)
root.right = Node(3)
root.left.left = Node(4)
root.left.right = Node(5)
root.left.right.right = Node(15)
root.right.left = Node(6)
root.right.right = Node(7)
root.right.left.right = Node(8)
 
node1 = root.left.right
node2 = root.right.right
 
print ("Yes" if isCousin(root, node1, node2) == 1 else "No")
 
# This code is contributed by Nikhil Kumar Singh(nickzuck_007)
C#
Javascript
Output
Yes
Time Complexity of the above solution is O(n) as it does at most three traversals of binary tree.
Space complexity: O(n) for call stack since using recursion

Check if two nodes are cousins in a Binary Tree | Set-2





Like
51
Previous
Construct Binary Tree from given Parent Array representation
Next
Check if all leaves are at same level
Related Articles
1.
Check if two nodes are cousins in a Binary Tree | Set-2
2.
Sum of cousins of a given node in a Binary Tree
3.
Print cousins of a given node in Binary Tree | Single Traversal
4.
Print cousins of a given node in Binary Tree
5.
Find the cousins of a given element in an N-ary tree
6.
Count the nodes of the tree which make a pangram when concatenated with the sub-tree nodes
7.
Check if two nodes in a Binary Tree are siblings
8.
Check if all nodes of the Binary Tree can be represented as sum of two primes
9.
Sum of nodes in a binary tree having only the left child nodes
10.
Count of nodes in a binary tree having their nodes in range [L, R]
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
shrikanth13
Akanksha_Rai
rdtank
simmytarika5
amartyaghoshgfg
ajaymakvana
technophpfij
hardikkoriintern
Article Tags :
Amazon
Binary Tree
Tree Traversals
Tree
Practice Tags :
Amazon
Tree
Improve Article
Report Issue