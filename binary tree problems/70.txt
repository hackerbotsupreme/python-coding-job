Sum of nodes at k-th level in a tree represented as string

Difficulty Level : Medium
Last Updated : 20 Dec, 2022
Read
Discuss
Courses
Practice
Video
Given an integer ‘K’ and a binary tree in string format. Every node of a tree has a value in the range of 0 to 9. We need to find the sum of elements at the K-th level from the root. The root is at level 0. 
Tree is given in the form: (node value(left subtree)(right subtree)) 

Examples: 

Input : tree = "(0(5(6()())(4()(9()())))(7(1()())(3()())))" 
        k = 2
Output : 14
Its tree representation is shown below


Elements at level k = 2 are 6, 4, 1, 3
sum of the digits of these elements = 6+4+1+3 = 14 


Input : tree = "(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))" 
        k = 3
Output : 9
Elements at level k = 3 are 5, 1 and 3
sum of digits of these elements = 5+1+3 = 9
Recommended: Please try your approach on {IDE} first, before moving on to the solution.
1. Input 'tree' in string format and level k
2. Initialize level = -1 and sum = 0
3. for each character 'ch' in 'tree'
   3.1  if ch == '(' then
        --> level++
   3.2  else if ch == ')' then
        --> level--
   3.3  else
        if level == k then
           sum = sum + (ch-'0')
4. Print sum
Implementation:

C++
// C++ implementation to find sum of
// digits of elements at k-th level
#include <bits/stdc++.h>
using namespace std;
 
// Function to find sum of digits
// of elements at k-th level
int sumAtKthLevel(string tree, int k)
{
    int level = -1;
    int sum = 0;  // Initialize result
    int n = tree.length();
 
    for (int i=0; i<n; i++)
    {
        // increasing level number
        if (tree[i] == '(')
            level++;
 
        // decreasing level number
        else if (tree[i] == ')')
            level--;
 
        else
        {
            // check if current level is
            // the desired level or not
            if (level == k)
                sum += (tree[i]-'0');
        }
    }
 
    // required sum
    return sum;
}
 
// Driver program to test above
int main()
{
    string tree = "(0(5(6()())(4()(9()())))(7(1()())(3()())))";
    int k = 2;
    cout << sumAtKthLevel(tree, k);
    return 0;
}
Java
Python3
C#
Javascript
Output
14
Time Complexity: O(n) 
Auxiliary Space: O(1)

Recursive Method: The idea is to treat the string as tree without actually creating one, and simply traverse the string recursively in Postorder Fashion and consider nodes that are at level k only. 



Following is the implementation of the same:

C++
// C++ implementation to find sum of
// digits of elements at k-th level
#include <bits/stdc++.h>
using namespace std;
 
// Recursive Function to find sum of digits
// of elements at k-th level
int sumAtKthLevel(string tree, int k,int &i,int level)
{
        
    if(tree[i++]=='(')
    {
       
      // if subtree is null, just like if root == NULL
      if(tree[i] == ')')
           return 0;           
     
      int sum=0;
       
      // Consider only level k node to be part of the sum
      if(level == k)
        sum = tree[i]-'0';
       
      // Recur for Left Subtree
      int leftsum = sumAtKthLevel(tree,k,++i,level+1);
       
      // Recur for Right Subtree
      int rightsum = sumAtKthLevel(tree,k,++i,level+1);
       
      // Taking care of ')' after left and right subtree
      ++i;
      return sum+leftsum+rightsum;       
    }
}
 
// Driver program to test above
int main()
{
    string tree = "(0(5(6()())(4()(9()())))(7(1()())(3()())))";
    int k = 2;
        int i=0;
    cout << sumAtKthLevel(tree, k,i,0);
    return 0;
}
Java
Python
C#
Javascript
Output
14
Time Complexity: O(n), the time complexity of this algorithm is O(n) as we need to traverse all the nodes of the tree in order to get the sum of digits of elements at the kth level.
Auxiliary Space: O(1), If we consider the recursive call stack then it will be O(K).

This article is contributed by Ayush Jauhari. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. 





Like
9
Previous
Maximum spiral sum in Binary Tree
Next
Sum of all leaf nodes of binary tree
Related Articles
1.
Product of nodes at k-th level in a tree represented as string
2.
Product of nodes at k-th level in a tree represented as string using Recursion
3.
Sum of all nodes at Kth level in a Binary Tree
4.
Calculate sum of all nodes present in a level for each level of a Tree
5.
Nodes at Kth level without duplicates in a Binary Tree
6.
Print all Nodes of given Binary Tree at the Kth Level
7.
Count nodes from all lower levels smaller than minimum valued node of current level for every level in a Binary Tree
8.
Difference between sums of odd level and even level nodes in an N-ary Tree
9.
Print nodes of a Binary Search Tree in Top Level Order and Reversed Bottom Level Order alternately
10.
Difference between sums of odd level and even level nodes of a Binary Tree
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
prerna saini
ukasp
SHUBHAMSINGH10
Ankur Goel
29AjayKumar
Rajput-Ji
avanitrachhadiya2155
rag2127
simmytarika5
hardikkoriintern
factworx4i2
surajrasr7277
Article Tags :
Tree
Practice Tags :
Tree
Improve Article
Report Issue