How to check if a given array represents a Binary Heap?

Difficulty Level : Easy
Last Updated : 15 Dec, 2022
Read
Discuss(40+)
Courses
Practice
Video
Given an array, how to check if the given array represents a Binary Max-Heap.
Examples: 

Input:  arr[] = {90, 15, 10, 7, 12, 2} 
Output: True
The given array represents below tree
       90
     /    \
   15      10
  /  \     /
 7    12  2 
The tree follows max-heap property as every
node is greater than all of its descendants.

Input:  arr[] = {9, 15, 10, 7, 12, 11} 
Output: False
The given array represents below tree
       9
     /    \
   15      10
  /  \     /
 7    12  11
The tree doesn't follows max-heap property 9 is 
smaller than 15 and 10, and 10 is smaller than 11. 
Recommended Problem
Does array represent Heap
Arrays
Binary Search Tree
+1 more
Cisco
Solve Problem
Submission count: 23.3K
A Simple Solution is to first check root if itâ€™s greater than all of its descendants. Then check for children of the root. Time complexity of this solution is O(n2)

An Efficient Solution is to compare root only with its children (not all descendants), if root is greater than its children and the same is true for all nodes, then tree is max-heap (This conclusion is based on transitive property of > operator, i.e., if x > y and y > z, then x > z).
The last internal node is present at index (n-2)/2 assuming that indexing begins with 0.

Below is the implementation of this solution. 


C++
Java
Python3
# Python3 program to check whether a 
# given array represents a max-heap or not 
  
# Returns true if arr[i..n-1] 
# represents a max-heap 
def isHeap(arr, i, n):
      
    # If (2 * i) + 1 >= n, then leaf node, so return true
    if i >= int((n - 1) / 2): 
        return True
      
    # If an internal node and is greater 
    # than its children, and same is
    # recursively true for the children 
    if(arr[i] >= arr[2 * i + 1] and 
       arr[i] >= arr[2 * i + 2] and 
       isHeap(arr, 2 * i + 1, n) and
       isHeap(arr, 2 * i + 2, n)):
        return True
      
    return False
  
# Driver Code
if __name__ == '__main__':
    arr = [90, 15, 10, 7, 12, 2, 7, 3] 
    n = len(arr) - 1
  
    if isHeap(arr, 0, n):
        print("Yes")
    else:
        print("No")
  
# This code is contributed by PranchalK
C#
PHP
Javascript
Output
Yes
Time complexity: O(n)
Auxiliary Space: O(h), Here h is the height of the given tree and the extra space is used due to the recursion call stack.

An Iterative Solution is to traverse all internal nodes and check id the node is greater than its children or not. 



C++
Java
Python3
# Python3 program to check whether a 
# given array represents a max-heap or not 
  
# Returns true if arr[i..n-1] 
# represents a max-heap 
def isHeap(arr, n):
      
    # Start from root and go till 
    # the last internal node
    for i in range(int((n - 2) / 2) + 1):
          
        # If left child is greater, 
        # return false 
        if arr[2 * i + 1] > arr[i]: 
                return False
  
        # If right child is greater,
        # return false 
        if (2 * i + 2 < n and
            arr[2 * i + 2] > arr[i]): 
                return False
    return True
  
# Driver Code
if __name__ == '__main__':
    arr = [90, 15, 10, 7, 12, 2, 7, 3] 
    n = len(arr)
  
    if isHeap(arr, n):
        print("Yes")
    else:
        print("No")
          
# This code is contributed by PranchalK
C#
PHP
Javascript
Output
Yes
Time complexity: O(n), Where n is the total number of elements in the given array.
Auxiliary Space: O(1), As constant extra space is used.

Thanks to Himanshu for suggesting this solution.
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above





Like
25
Previous
Check if a given Binary Tree is a Heap
Next
Merge k sorted arrays | Set 1
Related Articles
1.
Difference between Binary Heap, Binomial Heap and Fibonacci Heap
2.
Check if an array represents Inorder of Binary Search tree or not
3.
Check if an encoding represents a unique binary string
4.
Check whether Array represents a Fibonacci Series or not
5.
Heap Sort for decreasing order using min heap
6.
Difference between Min Heap and Max Heap
7.
When building a Heap, is the structure of Heap unique?
8.
Convert Min Heap to Max Heap
9.
Sorted order printing of a given array that represents a BST
10.
Given level order traversal of a Binary Tree, check if the Tree is a Min-Heap
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Easy
Easy
Normal
Medium
Hard
Expert
Improved By :
anubhavtikku
29AjayKumar
princiraj1992
Akanksha_Rai
PranchalKatiyar
princi singh
Sheenam Yadav
sivajikondapalli
jana_sayantan
rag2127
arynkr
kumargaurav97520
abhijeet19403
Article Tags :
Cisco
Arrays
Binary Search Tree
Heap
Practice Tags :
Cisco
Arrays
Binary Search Tree
Heap