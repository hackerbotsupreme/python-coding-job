K-th Largest Sum Contiguous Subarray

Difficulty Level : Medium
Last Updated : 27 Jan, 2023
Read
Discuss(70+)
Courses
Practice
Video
Given an array of integers. Write a program to find the K-th largest sum of contiguous subarray within the array of numbers that has both negative and positive numbers.

Examples: 

Input: a[] = {20, -5, -1}, K = 3
Output: 14
Explanation: All sum of contiguous subarrays are (20, 15, 14, -5, -6, -1) 
so the 3rd largest sum is 14.

Input: a[] = {10, -10, 20, -40}, k = 6
Output: -10
Explanation: The 6th largest sum among
sum of all contiguous subarrays is -10.

Recommended Problem
K-th Largest Sum Contiguous Subarray
Arrays
priority-queue
+1 more
Solve Problem
Submission count: 7.9K
Brute force Approach: Store all the contiguous sums in another array and sort it and print the Kth largest. But in the case of the number of elements being large, the array in which we store the contiguous sums will run out of memory as the number of contiguous subarrays will be large (quadratic order)

C++
Java
Python3
# Python program to find the K-th largest sum of subarray
# Function to calculate Kth largest element
# in contiguous subarray sum
 
def kthLargestSum(arr, N, K):
  result = []
  #  Generate all subarrays
  for i in range(N):
      sum = 0
      for j in range(i, N):
          sum += arr[j]
          result.append(sum)
 
  # Sort in decreasing order
  result.sort(reverse=True)
 
  # return the Kth largest sum
  return result[K - 1]
 
# Driver's code
a = [ 20, -5, -1]
N = len(a)
K = 3
 
# Function call
print(kthLargestSum(a, N, K))
 
# This code is contributed by hardikkushwaha.
C#
Javascript
Output
14
Time Complexity: O(n2*log(n2))
Auxiliary Space: O(n)

Kth largest sum contiguous subarray using Min-Heap:
The key idea is to store the pre-sum of the array in a sum[] array. One can find the sum of contiguous subarray from index i to j as sum[j] â€“ sum[i-1]. Now generate all possible contiguous subarray sums and push them into the Min-Heap only if the size of Min-Heap is less than K or the current sum is greater than the root of the Min-Heap. In the end, the root of the Min-Heap is the required answer

Follow the given steps to solve the problem using the above approach:

Create a prefix sum array of the input array
Create a Min-Heap that stores the subarray sum
Iterate over the given array using the variable i such that 1 <= i <= N, here i denotes the starting point of the subarray
Create a nested loop inside this loop using a variable j such that i <= j <= N, here j denotes the ending point of the subarray
Calculate the sum of the current subarray represented by i and j, using the prefix sum array
If the size of the Min-Heap is less than K, then push this sum into the heap
Otherwise, if the current sum is greater than the root of the Min-Heap, then pop out the root and push the current sum into the Min-Heap
Now the root of the Min-Heap denotes the Kth largest sum, Return it
Below is the implementation of the above approach:

C++
Java
Python3
# Python program to find the K-th largest sum
# of subarray
import heapq
 
# function to calculate Kth largest element
# in contiguous subarray sum
 
 
def kthLargestSum(arr, N, K):
 
    # array to store prefix sums
    sum = []
    sum.append(0)
    sum.append(arr[0])
    for i in range(2, N + 1):
        sum.append(sum[i - 1] + arr[i - 1])
 
    # priority_queue of min heap
    Q = []
    heapq.heapify(Q)
 
    # loop to calculate the contiguous subarray
    # sum position-wise
    for i in range(1, N + 1):
 
        # loop to traverse all positions that
        # form contiguous subarray
        for j in range(i, N + 1):
            x = sum[j] - sum[i - 1]
 
            # if queue has less then k elements,
            # then simply push it
            if len(Q) < K:
                heapq.heappush(Q, x)
            else:
                # it the min heap has equal to
                # k elements then just check
                # if the largest kth element is
                # smaller than x then insert
                # else its of no use
                if Q[0] < x:
                    heapq.heappop(Q)
                    heapq.heappush(Q, x)
 
    # the top element will be then kth
    # largest element
    return Q[0]
 
 
# Driver's code
if __name__ == "__main__":
    a = [10, -10, 20, -40]
    N = len(a)
    K = 6
 
    # Function call
    print(kthLargestSum(a, N, K))
 
 
# This code is contributed by Kumar Suman
C#
JavaScript
Output
-10
Time Complexity: O(N2 log K) 
Auxiliary Space: O(N), but this can be reduced to O(K) for min-heap and we can store the prefix sum array in the input array itself as it is of no use.

This article is contributed by Raja Vikramaditya. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. 



Like
Previous
Kth smallest element in a row-wise and column-wise sorted 2D array
Next
Program for Mean and median of an unsorted array
Related Articles
1.
Largest Sum Contiguous Subarray (Kadane's Algorithm)
2.
Largest sum contiguous increasing subarray
3.
Range query for Largest Sum Contiguous Subarray
4.
Largest sum contiguous subarray having only non-negative elements
5.
C++ Program to Find the K-th Largest Sum Contiguous Subarray
6.
Java Program to Find the K-th Largest Sum Contiguous Subarray
7.
Python3 Program to Find the K-th Largest Sum Contiguous Subarray
8.
Javascript Program for Largest Sum Contiguous Subarray
9.
Largest sum contiguous subarray by adding S exactly at K different positions
10.
Largest Sum Contiguous Subarray having unique elements
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
PravinAgre
Akanksha_Rai
ks120198
pleasehireme
Rajput-Ji
clintra
avtarkumar719
SHUBHAMSINGH10
shashikantg
simmytarika5
arorakashish0911
hardikkoriintern
mananbansal1806
janardansthox
mitalibhola94
hianmoyo3s
hkdass001
karandeep1234
hardikkushwaha
sayanc170
agrawalpoojaa976
Article Tags :
Order-Statistics
subarray
subarray-sum
Arrays
Heap
Practice Tags :
Arrays
Heap