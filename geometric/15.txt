Program for Point of Intersection of Two Lines

Difficulty Level : Medium
Last Updated : 16 Jun, 2022
Read
Discuss
Courses
Practice
Video
Given points A and B corresponding to line AB and points P and Q corresponding to line PQ, find the point of intersection of these lines. The points are given in 2D Plane with their X and Y Coordinates. Examples:

Input : A = (1, 1), B = (4, 4)
        C = (1, 8), D = (2, 4)
Output : The intersection of the given lines 
         AB and CD is: (2.4, 2.4)

Input : A = (0, 1), B = (0, 4)
        C = (1, 8), D = (1, 4)
Output : The given lines AB and CD are parallel.
Recommended: Please try your approach on {IDE} first, before moving on to the solution.
First of all, let us assume that we have two points (x1, y1) and (x2, y2). Now, we find the equation of line formed by these points. Let the given lines be :

a1x + b1y = c1
a2x + b2y = c2
We have to now solve these 2 equations to find the point of intersection. To solve, we multiply 1. by b2 and 2 by b1 This gives us, a1b2x + b1b2y = c1b2 a2b1x + b2b1y = c2b1 Subtracting these we get, (a1b2 – a2b1) x = c1b2 – c2b1 This gives us the value of x. Similarly, we can find the value of y. (x, y) gives us the point of intersection. Note: This gives the point of intersection of two lines, but if we are given line segments instead of lines, we have to also recheck that the point so computed actually lies on both the line segments. If the line segment is specified by points (x1, y1) and (x2, y2), then to check if (x, y) is on the segment we have to just check that

min (x1, x2) <= x <= max (x1, x2)
min (y1, y2) <= y <= max (y1, y2)
The pseudo code for the above implementation:

determinant = a1 b2 - a2 b1
if (determinant == 0)
{
    // Lines are parallel
}
else
{
    x = (c1b2 - c2b1)/determinant
    y = (a1c2 - a2c1)/determinant
}
These can be derived by first getting the slope directly and then finding the intercept of the line. 

C++
Java
Python3
# Python program to find the point of
# intersection of two lines
 
# Class used to  used to store the X and Y
# coordinates of a point respectively
class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
 
    # Method used to display X and Y coordinates
    # of a point
    def displayPoint(self, p):
        print(f"({p.x}, {p.y})")
 
 
def lineLineIntersection(A, B, C, D):
    # Line AB represented as a1x + b1y = c1
    a1 = B.y - A.y
    b1 = A.x - B.x
    c1 = a1*(A.x) + b1*(A.y)
 
    # Line CD represented as a2x + b2y = c2
    a2 = D.y - C.y
    b2 = C.x - D.x
    c2 = a2*(C.x) + b2*(C.y)
 
    determinant = a1*b2 - a2*b1
 
    if (determinant == 0):
        # The lines are parallel. This is simplified
        # by returning a pair of FLT_MAX
        return Point(10**9, 10**9)
    else:
        x = (b2*c1 - b1*c2)/determinant
        y = (a1*c2 - a2*c1)/determinant
        return Point(x, y)
 
 
# Driver code
A = Point(1, 1)
B = Point(4, 4)
C = Point(1, 8)
D = Point(2, 4)
 
intersection = lineLineIntersection(A, B, C, D)
 
if (intersection.x == 10**9 and intersection.y == 10**9):
    print("The given lines AB and CD are parallel.")
else:
    # NOTE: Further check can be applied in case
    # of line segments. Here, we have considered AB
    # and CD as lines
    print("The intersection of the given lines AB " + "and CD is: ")
    intersection.displayPoint(intersection)
 
 
# This code is contributed by Saurabh Jaiswal
C#
Javascript
Output:

The intersection of the given lines AB and 
CD is: (2.4, 2.4)
Time Complexity: O(1) 
Auxiliary Space: O(1)



This article is contributed by Aarti_Rathi and Aanya Jindal. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.





Like
11
Previous
Minimum block jumps to reach destination
Next
How to check if a given point lies inside or outside a polygon?
Related Articles
1.
Find intersection point of lines inside a section
2.
Ratio of the distance between the centers of the circles and the point of intersection of two direct common tangents to the circles
3.
Ratio of the distance between the centers of the circles and the point of intersection of two transverse common tangents to the circles
4.
Maximum points of intersection n lines
5.
Number of pairs of lines having integer intersection points
6.
Number of parallelograms when n horizontal parallel lines intersect m vertical parallel lines
7.
Check if N given lines can be intersected by K vertical lines
8.
Maximum distinct lines passing through a single point
9.
Count number of pairs of lines intersecting at a Point
10.
Count straight lines intersecting at a given point
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
shrikanth13
shruti456rawal
_saurabh_jaiswal
codewithshinchan
Article Tags :
Geometric-Lines
Geometric
Practice Tags :
Geometric