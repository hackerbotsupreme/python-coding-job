How to check if a given point lies inside or outside a polygon?

Difficulty Level : Hard
Last Updated : 18 Jan, 2023
Read
Discuss(100+)
Courses
Practice
Video
Given a polygon and a point ‘p‘, find if ‘p‘ lies inside the polygon or not. The points lying on the border are considered inside.

Examples:

check if a given point lies inside or outside a polygon 1

Recommended Problem
Please solve it on PRACTICE first, before moving on to the solution 
Solve Problem
Approach: The idea to solve this problem is based on How to check if two given line segments intersect, and to be used as follows:

Draw a horizontal line to the right of each point and extend it to infinity
Count the number of times the line intersects with polygon edges.
A point is inside the polygon if either count of intersections is odd or point lies on an edge of polygon.  If none of the conditions is true, then point lies outside.
check if a given point lies inside or outside a polygon 2

How to handle point ‘g’ in the above figure? 

Note that we should return true if the point lies on the line or the same as one of the vertices of the given polygon. To handle this, after checking if the line from ‘p’ to extreme intersects, we check whether ‘p’ is collinear with vertices of the current line of polygon. If it is collinear, then we check if the point ‘p’ lies on current side of polygon, if it lies, we return true, else false.

Following is the implementation of the above approach: 

C++
Java
Python3
class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
 
class line:
    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
 
def onLine(l1, p):
    # Check whether p is on the line or not
    if (
        p.x <= max(l1.p1.x, l1.p2.x)
        and p.x <= min(l1.p1.x, l1.p2.x)
        and (p.y <= max(l1.p1.y, l1.p2.y) and p.y <= min(l1.p1.y, l1.p2.y))
    ):
        return True
    return False
 
def direction(a, b, c):
    val = (b.y - a.y) * (c.x - b.x) - (b.x - a.x) * (c.y - b.y)
    if val == 0:
        # Colinear
        return 0
    elif val < 0:
        # Anti-clockwise direction
        return 2
    # Clockwise direction
    return 1
 
def isIntersect(l1, l2):
    # Four direction for two lines and points of other line
    dir1 = direction(l1.p1, l1.p2, l2.p1)
    dir2 = direction(l1.p1, l1.p2, l2.p2)
    dir3 = direction(l2.p1, l2.p2, l1.p1)
    dir4 = direction(l2.p1, l2.p2, l1.p2)
 
    # When intersecting
    if dir1 != dir2 and dir3 != dir4:
        return True
 
    # When p2 of line2 are on the line1
    if dir1 == 0 and onLine(l1, l2.p1):
        return True
 
    # When p1 of line2 are on the line1
    if dir2 == 0 and onLine(l1, l2.p2):
        return True
 
    # When p2 of line1 are on the line2
    if dir3 == 0 and onLine(l2, l1.p1):
        return True
 
    # When p1 of line1 are on the line2
    if dir4 == 0 and onLine(l2, l1.p2):
        return True
 
    return False
 
def checkInside(poly, n, p):
    # When polygon has less than 3 edge, it is not polygon
    if n < 3:
        return False
 
    # Create a point at infinity, y is same as point p
    exline = line(p, Point(9999, p.y))
    count = 0
    i = 0
    while True:
        # Forming a line from two consecutive points of poly
        side = line(poly[i], poly[(i + 1) % n])
        if isIntersect(side, exline):
            # If side is intersects ex
            if (direction(side.p1, p, side.p2) == 0):
                return onLine(side, p);
            count += 1
         
        i = (i + 1) % n;
        if i == 0:
            break
 
    # When count is odd
    return count & 1;
 
 
# Driver code
polygon = [  Point( 0, 0 ), Point( 10, 0 ), Point( 10, 10 ), Point( 0, 10 ) ];
p = Point( 5, 3 );
n = 4;
 
# Function call
if (checkInside(polygon, n, p)):
    print("Point is inside.")
else:
    print("Point is outside.")
C#
Javascript
Output
Point is inside.
Time Complexity: O(n) where n is the number of vertices in the given polygon.
Auxiliary Space: O(1), since no extra space has been taken.

This article is contributed by Aarti_Rathi. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above



Like
Previous
Find the Missing Point of Parallelogram
Next
Area of a polygon with given n ordered vertices
Related Articles
1.
Find if a point lies inside, outside or on the circumcircle of three points A, B, C
2.
Check if the given point lies inside given N points of a Convex Polygon
3.
Check if a point is inside, outside or on the ellipse
4.
Check if a point is inside, outside or on the parabola
5.
Check if a point is inside, outside or on a Hyperbola
6.
Check whether a given point lies inside a triangle or not
7.
Check whether a given point lies inside a rectangle or not
8.
Check whether a given point lies on or inside the rectangle | Set 3
9.
Check whether a point lies inside a sphere or not
10.
Check if a point lies inside a rectangle | Set-2
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Hard
Easy
Normal
Medium
Hard
Expert
Improved By :
ImanSahebi
29AjayKumar
Vikas Chitturi
rag2127
sweetyty
sagartomar9927
_shinchancode
rishav1329
janardansthox
harendrakumar123
phasing17
poojaagrawal2
ratiagrawal
lokeshpotta20
Article Tags :
Geometric
Mathematical
Practice Tags :
Geometric
Mathematical