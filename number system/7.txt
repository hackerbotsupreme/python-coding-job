Converting a Real Number (between 0 and 1) to Binary String

Difficulty Level : Hard
Last Updated : 13 Oct, 2022
Read
Discuss
Courses
Practice
Video
Given a real number between 0 and 1 (e.g., 0.72) that is passed in as a double, print the binary representation. If the number cannot be represented accurately in binary with at most 32 characters, print” ERROR:’ 

Examples: 

Input :  (0.625)10
Output : (0.101)2

Input : (0.72)10
Output : ERROR
 
Recommended: Please try your approach on {IDE} first, before moving on to the solution.
Solution: First, let’s start off by asking ourselves what a non-integer number in binary looks like. By analogy to a decimal number, the binary number 0 .1012 would look like: 
0. 1012 = 1 * 1/21 + 0 *1/22 + 1 * 1/23 . 

Method 1: Multiply the decimal part by 2


To print the decimal part, we can multiply by 2 and check if 2*n is greater than or equal to 1. This is essentially “shifting” the fractional sum. That is: 

r = 210 * n;
  = 210 * 0.1012;
  = 1 * 1/20 + 0 *1/21 + 1 * 1/22;
  = 1.012;
If r >= 1, then we know that n had a 1 right after the decimal point. By doing this continuously, we can check every digit. 

C++
Java
Python3
# Python3 program to binary real number to string
 
# Function to convert Binary real
# number to String
def toBinary(n):
 
    # Check if the number is Between 0 to 1 or Not
    if(n >= 1 or n <= 0):
        return "ERROR"
 
    answer = ""
    frac = 0.5
    answer = answer + "."
 
    # Setting a limit on length: 32 characters.
    while(n > 0):
 
        # Setting a limit on length: 32 characters
        if(len(answer) >= 32):
            return "ERROR"
 
        # Multiply n by 2 to check it 1 or 0
        b = n * 2
        if (b >= 1):
 
            answer = answer + "1"
            n = b - 1
 
        else:
            answer = answer + "0"
            n = b
 
    return answer
 
# Driver code
if __name__=='__main__':
    n = 0.625
    result = toBinary(n)
    print("(0", result, ") in base 2")
    m = 0.72
    result = toBinary(m)
    print("(", result, ")")
 
# This code is contributed by
# Sanjit_Prasad
C#
PHP
Javascript
Output: 

(0.101)  in base 2
(ERROR) 
Method 2

Alternatively, rather than multiplying the number by two and comparing it to 1, we can compare the number to . 5, then . 25, and so on. The code below demonstrates this approach.  

C++
Java
Python3
# Python3 program to Binary real number to String.
 
# Function to convert Binary real
# number to String
def toBinary(n):
 
    # Check if the number is Between
    # 0 to 1 or Not
    if (n >= 1 or n <= 0):
        return "ERROR";
 
    frac = 0.5;
    answer = ".";
 
    # Setting a limit on length: 32 characters.    
    while (n > 0):
         
        # 32 char max
        if (len(answer) >= 32):
            return "ERROR";
             
        # compare the number to .5
        if (n >= frac):
            answer += "1";
            n = n - frac;
        else:
            answer += "0";
         
        frac = (frac / 2);
     
    return answer;
 
# Driver code
 
# Input value
n = 0.625;
 
result = toBinary(n);
print("( 0", result, ") in base 2");
 
m = 0.72;
result = toBinary(m);
print("(", result, ")");
 
# This code is contributed
# by mits
C#
PHP
Javascript
Output: 

(0.101)  in base 2
(ERROR)  
Both approaches are equally good; choose the one you feel most comfortable with. 
This article is contributed by Mr. Somesh Awasthi. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.
 



Like
Previous
Queries for GCD of all numbers of an array except elements in a given range
Next
Find the n-th number made of even digits only
Related Articles
1.
Count of primes after converting given binary number in base between L to R
2.
Python Program to Convert any Positive Real Number to Binary string
3.
Converting Decimal Number lying between 1 to 3999 to Roman Numerals
4.
Calculating n-th real root using binary search
5.
Find the real and imaginary part of a Complex number
6.
Converting Power Law Distribution to a Linear graph
7.
Check if X can be converted to Y by converting to 3 * (X / 2) or X - 1 in each operation
8.
Minimize cost of converting all array elements to Fibonacci Numbers
9.
Level order traversal by converting N-ary Tree into adjacency list representation with K as root node
10.
Maximize the Product of Sum by converting Array elements into given two types
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Hard
Easy
Normal
Medium
Hard
Expert
Improved By :
himanshu batra
Sanjit_Prasad
Rajput-Ji
Mithun Kumar
Chandan_Kumar
rameshtravel07
surinderdawra388
shinjanpatra
simmytarika5
Article Tags :
binary-representation
Mathematical
Practice Tags :
Mathematical
Report Issue