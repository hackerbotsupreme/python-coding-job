Match a pattern and String without using regular expressions

Difficulty Level : Hard
Last Updated : 25 Jan, 2022
Read
Discuss
Courses
Practice
Video
Given a string, find out if string follows a given pattern or not without using any regular expressions. 
Examples: 
 

Input: 
string - GraphTreesGraph
pattern - aba
Output: 
a->Graph
b->Trees

Input: 
string - GraphGraphGraph
pattern - aaa
Output: 
a->Graph

Input: 
string - GeeksforGeeks
pattern - GfG
Output: 
G->Geeks
f->for

Input: 
string - GeeksforGeeks
pattern - GG
Output: 
No solution exists
 

Recommended: Please try your approach on {IDE} first, before moving on to the solution.
We can solve this problem with the help of Backtracking. For each character in the pattern, if the character is not seen before, we consider all possible sub-strings and recurse to see if it leads to the solution or not. We maintain a map that stores sub-string mapped to a pattern character. If pattern character is seen before, we use the same sub-string present in the map. If we found a solution, for each distinct character in the pattern, we print string mapped to it using our map.
Below is C++ implementation of above idea â€“
 

CPP
Java
Python3
# Function to determine if given pattern matches with a string or not
def match(str, pat, dict, i=0, j=0):
 
    n = len(str)
    m = len(pat)
 
    # base condition
    if n < m:
        return False
 
    # if both pattern and the string reaches end
    if i == n and j == m:
        return True
 
    # if either string or pattern reaches end
    if i == n or j == m:
        return False
 
    # consider next character from the pattern
    curr = pat[j]
 
    # if the character is seen before
    if curr in dict:
 
        s = dict[curr]
        k = len(s)
 
        # ss stores next k characters of the given string
        if i + k < len(str):
            ss = str[i:i + k]
        else:
            ss = str[i:]
 
        # return false if next k characters doesn't match with s
        if ss != s:
            return False
 
        # recur for remaining characters if next k characters matches
        return match(str, pat, dict, i + k, j + 1)
 
    # process all remaining characters in the string if current
    # character is never seen before
    for k in range(1, n - i + 1):
 
        # insert substring formed by next k characters of the string
        # into the dictionary
        dict[curr] = str[i:i + k]
 
        # check if it leads to the solution
        if match(str, pat, dict, i + k, j + 1):
            return True
 
        # else backtrack - remove current character from the dictionary
        dict.pop(curr)
 
    return False
 
 
if __name__ == '__main__':
 
    # input string and pattern
    str = "GeeksforGeeks"
    pat = "GfG"
 
    # create a dictionary to store mappings between the pattern and string
    dict = {}
 
    # check for solution
    if match(str, pat, dict):
        print(dict)
    else:
        print("Solution doesn't exist")
 
# This code is contributed by Priyadarshini Kumari
Javascript
Output: 
 

f->for
G->Geeks
This article is contributed by Aditya Goel. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.
 





Like
11
Previous
Longest Possible Route in a Matrix with Hurdles
Next
Fill two instances of all numbers from 1 to n in a specific way
Related Articles
1.
Print all the permutations of a string without repetition using Collections in Java
2.
Print all possible permutations of an Array/Vector without duplicates using Backtracking
3.
Check if a given string is sum-string
4.
Print all permutation of a string using ArrayList
5.
Write a program to print all Permutations of given String
6.
Minimize number of unique characters in string
7.
Print all the combinations of a string in lexicographical order
8.
Print all permutations of a string in Java
9.
Java Program to print distinct permutations of a string
10.
Generate all permutations of a string that follow given constraints
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Hard
Easy
Normal
Medium
Hard
Expert
Improved By :
pawki
_saurabh_jaiswal
Article Tags :
Backtracking
Practice Tags :
Backtracking
Improve Article
Report Issue