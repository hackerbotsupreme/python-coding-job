A backtracking approach to generate n bit Gray Codes

Difficulty Level : Hard
Last Updated : 15 Jun, 2022
Read
Discuss
Courses
Practice
Video
Given a number n, the task is to generate n bit Gray codes (generate bit patterns from 0 to 2^n-1 such that successive patterns differ by one bit) 

Examples: 

Input : 2 
Output : 0 1 3 2
Explanation : 
00 - 0
01 - 1
11 - 3
10 - 2

Input : 3 
Output : 0 1 3 2 6 7 5 4
 
Recommended: Please try your approach on {IDE} first, before moving on to the solution.
We have discussed an approach in Generate n-bit Gray Codes
This article provides a backtracking approach to the same problem. Idea is that for each bit out of n bit we have a choice either we can ignore it or we can invert the bit so this means our gray sequence goes upto 2 ^ n for n bits. So we make two recursive calls for either inverting the bit or leaving the bit as it is. 

C++
Java
Python3
# Python3 program to find the
# gray sequence of n bits.
 
""" we have 2 choices for each of the n bits
either we can include i.e invert the bit or
we can exclude the bit i.e we can leave
the number as it is. """
def grayCodeUtil(res, n, num):
     
    # base case when we run out bits to process
    # we simply include it in gray code sequence.
    if (n == 0):
        res.append(num[0])
        return
         
    # ignore the bit.
    grayCodeUtil(res, n - 1, num)
     
    # invert the bit.
    num[0] = num[0] ^ (1 << (n - 1))
    grayCodeUtil(res, n - 1, num)
     
# returns the vector containing the gray
# code sequence of n bits.
def grayCodes(n):
    res = []
     
    # num is passed by reference to keep
    # track of current code.
    num = [0]
    grayCodeUtil(res, n, num)
    return res
 
# Driver Code
n = 3
code = grayCodes(n)
for i in range(len(code)):
    print(code[i])
 
# This code is contributed by SHUBHAMSINGH10
C#
Javascript
Output: 

0
1
3
2
6
7
5
4
Time Complexity: O(n)
Auxiliary Space: O(n)





Like
13
Previous
Generate n-bit Gray Codes
Next
Program to reverse a string (Iterative and Recursive)
Related Articles
1.
Generate n-bit Gray Codes
2.
Generate n-bit Gray Codes | Set 2
3.
Gray to Binary and Binary to Gray conversion
4.
Generate all distinct subsequences of array using backtracking
5.
Code Converters - Binary to/from Gray Code
6.
Binary to Gray code using recursion
7.
Decimal Equivalent of Gray Code and its Inverse
8.
Inserting m into n such that m starts at bit j and ends at bit i.
9.
Inserting M into N such that m starts at bit j and ends at bit i | Set-2
10.
Minimum bit flips such that every K consecutive bits contain at least one set bit
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
foreverrookie
@foreverrookie
Vote for difficulty
Current difficulty : Hard
Easy
Normal
Medium
Hard
Expert
Improved By :
SHUBHAMSINGH10
Rajput-Ji
29AjayKumar
gfgking
ranjanrohit840
Article Tags :
gray-code
Backtracking
Bit Magic
Practice Tags :
Backtracking
Bit Magic
Improve Article
Report Issue