Find next greater number with same set of digits

Difficulty Level : Medium
Last Updated : 10 Jan, 2023
Read
Discuss(220+)
Courses
Practice
Video
Given a number n, find the smallest number that has same set of digits as n and is greater than n. If n is the greatest possible number with its set of digits, then print “not possible”.

Examples: 
For simplicity of implementation, we have considered input number as a string. 

Input:  n = "218765"
Output: "251678"

Input:  n = "1234"
Output: "1243"

Input: n = "4321"
Output: "Not Possible"

Input: n = "534976"
Output: "536479"
Recommended Problem
Next Permutation
Arrays
permutation
+2 more
Infosys
Flipkart
+8 more
Solve Problem
Submission count: 94.3K
Following are few observations about the next greater number. 

If all digits sorted in descending order, then output is always “Not Possible”. For example, 4321. 
If all digits are sorted in ascending order, then we need to swap last two digits. For example, 1234. 
For other cases, we need to process the number from rightmost side (why? because we need to find the smallest of all greater numbers)
You can now try developing an algorithm yourself. 


Following is the algorithm for finding the next greater number. 

Traverse the given number from rightmost digit, keep traversing till you find a digit which is smaller than the previously traversed digit. For example, if the input number is “534976”, we stop at 4 because 4 is smaller than next digit 9. If we do not find such a digit, then output is “Not Possible”.
Now search the right side of above found digit ‘d’ for the smallest digit greater than ‘d’. For “534976″, the right side of 4 contains “976”. The smallest digit greater than 4 is 6.
Swap the above found two digits, we get 536974 in above example.
Now sort all digits from position next to ‘d’ to the end of number. The number that we get after sorting is the output. For above example, we sort digits in bold 536974. We get “536479” which is the next greater number for input 534976.
Following are the implementation of above approach. 

C++
Java
Python3
# Python program to find the smallest number which 
# is greater than a given no. has same set of 
# digits as given number
  
# Given number as int array, this function finds the 
# greatest number and returns the number as integer
def findNext(number,n):
       
     # Start from the right most digit and find the first
     # digit that is smaller than the digit next to it
     for i in range(n-1,0,-1):
         if number[i] > number[i-1]:
             break
               
     # If no such digit found,then all numbers are in 
     # descending order, no greater number is possible
     if i == 1 and number[i] <= number[i-1]:
         print ("Next number not possible")
         return
           
     # Find the smallest digit on the right side of 
     # (i-1)'th digit that is greater than number[i-1]
     x = number[i-1]
     smallest = i
     for j in range(i+1,n):
         if number[j] > x and number[j] < number[smallest]:
             smallest = j
           
     # Swapping the above found smallest digit with (i-1)'th
     number[smallest],number[i-1] = number[i-1], number[smallest]
       
     # X is the final number, in integer datatype 
     x = 0
     # Converting list upto i-1 into number
     for j in range(i):
         x = x * 10 + number[j]
       
     # Sort the digits after i-1 in ascending order
     number = sorted(number[i:])
     # converting the remaining sorted digits into number
     for j in range(n-i):
         x = x * 10 + number[j]
       
     print ("Next number with set of digits is",x)
  
  
# Driver Program to test above function
digits = "534976"         
  
# converting into integer array,
# number becomes [5,3,4,9,7,6]
number = list(map(int ,digits))
findNext(number, len(digits))
  
# This code is contributed by Harshit Agrawal
C#
Javascript
Output
Next number with same set of digits is 536479
Time Complexity: O(N*logN) 
Auxiliary Space: O(1)

The above implementation can be optimized in following ways. 

We can use binary search in step II instead of linear search. 
In step IV, instead of doing simple sort, we can apply some clever technique to do it in linear time. Hint: We know that all digits are linearly sorted in reverse order except one digit which was swapped.
With above optimizations, we can say that the time complexity of this method is O(n). 

Optimised Approach:

Here instead of sorting the digits after (i-1) index, we are reversing the digits as mentioned in the above optimisation point.
As they will be in decreasing order so to find the smallest element possible from the right part we just reverse them thus reducing time complexity.
Below is the implementation of the above approach:

C++14
Java
Python3
# A python program to find the next greatest number
def nextPermutation(arr):
    
      # find the length of the array
    n = len(arr)
      
    # start from the right most digit and find the first
    # digit that is smaller than the digit next to it.
    k = n - 2
    while k >= 0:
        if arr[k] < arr[k + 1]:
            break
        k -= 1
          
    # reverse the list if the digit that is smaller than the
    # digit next to it is not found.
    if k < 0:
        arr = arr[::-1]
    else:
        
          # find the first greatest element than arr[k] from the 
        # end of the list
        for l in range(n - 1, k, -1):
            if arr[l] > arr[k]:
                break
  
        # swap the elements at arr[k] and arr[l      
        arr[l], arr[k] = arr[k], arr[l]
          
        # reverse the list from k + 1 to the end to find the 
        # most nearest greater number to the given input number
        arr[k + 1:] = reversed(arr[k + 1:])
  
    return arr
  
# Driver code
arr = [5, 3, 4, 9, 7, 6]
print(*nextPermutation(arr))
  
# This code is contributed by Manish Thapa
C#
Javascript
Output
5 3 6 4 7 9 
Time Complexity: O(N)
Auxiliary Space: O(1)



Like
Previous
Print first k digits of 1/n where n is a positive integer
Next
Reverse a number using stack
Related Articles
1.
Next greater Number than N with the same quantity of digits A and B
2.
Find next Smaller of next Greater in an array
3.
Find next greater number formed with exactly two unique digits for each Array element
4.
Next higher palindromic number using the same set of digits
5.
Next greater number on the basis of precedence of digits
6.
Minimum digits to be removed to make either all digits or alternating digits same
7.
Next greater element in same order as input
8.
Find the next greater element in a Circular Array | Set 2
9.
Find Next number having distinct digits from the given number N
10.
Find the Next perfect square greater than a given number
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
yogesh135
29AjayKumar
ChrisFedun
rohan07
vishalkharwar
avanitrachhadiya2155
iammanish041
amartyaghoshgfg
hardikkoriintern
phasing17
singhh3010
Article Tags :
Adobe
Amazon
FactSet
Hike
MakeMyTrip
Microsoft
Morgan Stanley
number-digits
Oxigen Wallet
permutation
Qualcomm
Samsung
Snapdeal
Vizury Interactive Solutions
Zillious
Arrays
Mathematical
Searching
Practice Tags :
Adobe
Amazon
FactSet
Hike
MakeMyTrip
Microsoft
Morgan Stanley
Oxigen Wallet
Qualcomm
Samsung
Snapdeal
Vizury Interactive Solutions
Zillious
Arrays
Mathematical
permutation
Searching
Report Issue