Buy Maximum Stocks if i stocks can be bought on i-th day

Difficulty Level : Easy
Last Updated : 23 Jan, 2023
Read
Discuss
Courses
Practice
Video
In a stock market, there is a product with its infinite stocks. The stock prices are given for N days, where arr[i] denotes the price of the stock on the ith day. There is a rule that a customer can buy at most i stock on the ith day. If the customer has k amount of money initially, find out the maximum number of stocks a customer can buy. 

For example, for 3 days the price of a stock is given as 7, 10, 4. You can buy 1 stock worth 7 rs on day 1, 2 stocks worth 10 rs each on day 2 and 3 stock worth 4 rs each on day 3.

Examples: 

Input : price[] = { 10, 7, 19 }, 
              k = 45.
Output : 4
A customer purchases 1 stock on day 1 for 10 rs, 
2 stocks on day 2 for 7 rs each and 1 stock on day 3 for 19 rs.Therefore total of
10, 7 * 2 = 14 and 19 respectively. Hence, 
total amount is 10 + 14 + 19 = 43 and number 
of stocks purchased is 4.

Input  : price[] = { 7, 10, 4 }, 
               k = 100.
Output : 6
Recommended Problem
Buy Maximum Stocks if i stocks can be bought on i-th day
Arrays
Data Structures
Solve Problem
Submission count: 6.2K
The idea is to use greedy approach, where we should start buying product from the day when the stock price is least and so on. 
So, we will sort the pair of two values i.e { stock price, day } according to the stock price, and if stock prices are same, then we sort according to the day. 
Now, we will traverse along the sorted list of pairs, and start buying as follows: 
Let say, we have R rs remaining till now, and the cost of product on this day be C, and we can buy atmost L products on this day then, 
total purchase on this day (P) = min(L, R/C) 
Now, add this value to the answer 
total_purchase = total_purchase + P, where P =min(L, R/C) 
Now, subtract the cost of buying P items from remaining money, R = R â€“ P*C. 
Total number of products that we can buy is equal to total_purchase.

Below is the implementation of this approach:  

C++
Java
Python3
# Python3 program to find maximum number of stocks
# that can be bought with given constraints.
 
# Returns the maximum stocks
def buyMaximumProducts(n, k, price):
 
    # Making pair of stock cost and day number
    arr = []
     
    for i in range(n):
        arr.append([i + 1, price[i]])
 
    # Sort based on the price of stock
    arr.sort(key = lambda x: x[1])
     
    # Calculating the max stocks purchased
    total_purchase = 0
    for i in range(n):
        P = min(arr[i][0], k//arr[i][1])
        total_purchase += P
        k -= (P * arr[i][1])
 
    return total_purchase
 
# Driver code
price = [ 10, 7, 19 ]
n = len(price)
k = 45
   
print(buyMaximumProducts(n, k, price))
 
# This code is contributed by Tharun Reddy
C#
Javascript
Output
4
Time Complexity: O(nlogn).
Auxiliary Space: O(n)

This article is contributed by Anuj Chauhan. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.
 



Like
Previous
Split n into maximum composite numbers
Next
Find the minimum and maximum amount to buy all N candies
Related Articles
1.
Maximum litres of water that can be bought with N Rupees
2.
Maximum number of candies that can be bought
3.
Maximum items that can be bought from the cost Array based on given conditions
4.
Maximize Profit by trading stocks based on given rate per day
5.
Find the minimum and maximum amount to buy all N candies
6.
Maximize sum of profits for N items such that profit for ith item is product of its weight and count of distinct chosen values
7.
Find the original Array from given array where ith element is the average of first i elements
8.
Buy minimum items without change and given coins
9.
Queries to check if sweets of given type can be eaten on given day or not
10.
Problems not solved at the end of Nth day
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Easy
Easy
Normal
Medium
Hard
Expert
Improved By :
Akanksha_Rai
tharun07
molterous
smitsekhadia99
paritoshdev26
tapeshdua420
noviced3vq6
faizansayeed788
sagartomar9927
Article Tags :
Greedy
Practice Tags :
Greedy
Report Issue