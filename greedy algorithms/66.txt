Maximum elements that can be made equal with k updates

Difficulty Level : Hard
Last Updated : 07 May, 2021
Read
Discuss
Courses
Practice
Video
Given an array and a value k. We have to find the maximum number of equal elements possible for the array so that we can increase the elements of the array by incrementing a total of at-most k.
Examples:
 

Input : array = { 2, 4, 9 }, k = 3 
Output : 2 
We are allowed to do at most three increments. We can make two elements 4 by increasing 2 by 2. Note that we can not make two elements 9 as converting 4 to 9 requires 5 increments.
Input : array = { 5, 5, 3, 1 }, k = 5 
Output : 3 
Explanation: Here 1st and 2nd elements are equal. Then we can increase 3rd element 3 upto 5. Then k becomes (k-2) = 3. Now we can’t increase 1 to 5 because k value is 3 and we need 4 for the updation. Thus equal elements possible are 3. Here we can also increase 1 to 5. Then also we have 3 because we can’t update 3 to 5.
Input : array = { 5, 5, 3, 1 }, k = 6 
Output : 4 
 

 

Recommended: Please try your approach on {IDE} first, before moving on to the solution.
Naive Approach: In the naive approach we have an algorithm in O(n^2) time in which we check for each element how many other elements can be incremented so that they will become equal to them.
Efficient Approach: In this approach, first we will sort the array. Then we maintain two arrays. First is prefix sum array which stores the prefix sum of the array and another is maxx[] array which stores the maximum element found till every point, i.e., max[i] means maximum element from 1 to i. After storing these values in prefix[] array and maxx[] array, we do the binary search from 1 to n(number of elements of the array) to calculate how many elements which can be incremented to make them equal. In the binary search, we use one function in which we determine what is the number of elements can be incremented to make them equal to a single value. 
 


C++
Java
Python3
# Python3 program to find maximum elements
# that can be made equal with k updates
 
# Function to calculate the maximum number of
# equal elements possible with atmost K increment
# of values .Here we have done sliding window
# to determine that whether there are x number of
# elements present which on increment will become
# equal. The loop here will run in fashion like
# 0...x-1, 1...x, 2...x+1, ...., n-x-1...n-1
def ElementsCalculationFunc(pre, maxx,
                            x, k, n):
 
    i = 0
    j = x
    while j <= n:
 
        # It can be explained with the reasoning
        # that if for some x number of elements
        # we can update the values then the
        # increment to the segment (i to j having
        # length -> x) so that all will be equal is
        # (x*maxx[j]) this is the total sum of
        # segment and (pre[j]-pre[i]) is present sum
        # So difference of them should be less than k
        # if yes, then that segment length(x) can be
        # possible return true
        if (x * maxx[j] - (pre[j] - pre[i]) <= k):
            return True
 
        i += 1
        j += 1
     
    return False
 
def MaxNumberOfElements( a, n, k):
 
    # sort the array in ascending order
    a.sort()
    pre = [0] * (n + 1) # prefix sum array
    maxx = [0] * (n + 1) # maximum value array
 
    # Initializing the prefix array
    # and maximum array
    for i in range (n + 1):
        pre[i] = 0
        maxx[i] = 0
 
    for i in range(1, n+1):
 
        # Calculating prefix sum of the array
        pre[i] = pre[i - 1] + a[i - 1]
 
        # Calculating max value upto that
        # position in the array
        maxx[i] = max(maxx[i - 1], a[i - 1])
 
    # Binary search applied for
    # computation here
    l = 1
    r = n
    while (l < r) :
        mid = (l + r) // 2
 
        if (ElementsCalculationFunc(pre, maxx,
                                    mid - 1, k, n)):
            ans = mid
            l = mid + 1
         
        else:
            r = mid - 1
 
    # printing result
    print (ans)
 
# Driver Code
if __name__ == "__main__":
 
    arr = [2, 4, 9 ]
    n = len(arr)
    k = 3
    MaxNumberOfElements(arr, n, k)
 
# This code is contributed by Ita_c
C#
PHP
Javascript
Output: 
2
 

Time Complexity :O(nlog(n)) 
Space Complexity : O(n)
 





Like
11
Previous
Find the minimum and maximum amount to buy all N candies
Next
Maximum number of customers that can be satisfied with given quantity
Related Articles
1.
Maximum elements that can be made equal with k updates | Set 2
2.
Longest subarray whose elements can be made equal by maximum K increments
3.
Check whether two strings can be made equal by reversing substring of equal length from both strings
4.
Queries to count array elements greater than or equal to a given number with updates
5.
Check if all elements of a Circular Array can be made equal by increments of adjacent pairs
6.
Smallest positive integer K such that all array elements can be made equal by incrementing or decrementing by at most K
7.
Sum and Maximum of elements in array from [L, R] before and after updates
8.
Maximum possible value of array elements that can be made based on given capacity conditions
9.
Check if given Strings can be made equal by inserting at most 1 String
10.
Check if two arrays can be made equal by reversing any subarray once
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
Surya Priy
@Surya Priy
Vote for difficulty
Current difficulty : Hard
Easy
Normal
Medium
Hard
Expert
Improved By :
Sam007
ukasp
Sach_Code
arorakashish0911
amarjeet_singh
avanitrachhadiya2155
Article Tags :
Binary Search
Competitive Programming
Greedy
Searching
Technical Scripter
Practice Tags :
Binary Search
Greedy
Searching