Russian Peasant (Multiply two numbers using bitwise operators)

Difficulty Level : Easy
Last Updated : 28 Oct, 2021
Read
Discuss
Courses
Practice
Video
Given two integers, write a function to multiply them without using multiplication operator.
There are many other ways to multiply two numbers (For example, see this). One interesting method is the Russian peasant algorithm. The idea is to double the first number and halve the second number repeatedly till the second number doesn’t become 1. In the process, whenever the second number become odd, we add the first number to result (result is initialized as 0) 
The following is simple algorithm. 

Let the two given numbers be 'a' and 'b'
1) Initialize result 'res' as 0.
2) Do following while 'b' is greater than 0
   a) If 'b' is odd, add 'a' to 'res'
   b) Double 'a' and halve 'b'
3) Return 'res'. 
 

C++
Java
Python 3
# A method to multiply two numbers
# using Russian Peasant method
 
# Function to multiply two numbers
# using Russian Peasant method
def russianPeasant(a, b):
 
    res = 0 # initialize result
 
    # While second number doesn't
    # become 1
    while (b > 0):
     
        # If second number becomes
        # odd, add the first number
        # to result
        if (b & 1):
            res = res + a
 
        # Double the first number
        # and halve the second
        # number
        a = a << 1
        b = b >> 1
     
    return res
 
# Driver program to test
# above function
print(russianPeasant(18, 1))
print(russianPeasant(20, 12))
# This code is contributed by
# Smitha Dinesh Semwal
C#
PHP
Javascript
Output: 

18
240
Time Complexity: O(log2b)

Auxiliary Space: O(1)

How does this work? 
The value of a*b is same as (a*2)*(b/2) if b is even, otherwise the value is same as ((a*2)*(b/2) + a). In the while loop, we keep multiplying ‘a’ with 2 and keep dividing ‘b’ by 2. If ‘b’ becomes odd in loop, we add ‘a’ to ‘res’. When value of ‘b’ becomes 1, the value of ‘res’ + ‘a’, gives us the result. 
Note that when ‘b’ is a power of 2, the ‘res’ would remain 0 and ‘a’ would have the multiplication. See the reference for more information.
Reference: 
http://mathforum.org/dr.math/faq/faq.peasant.html
This article is compiled by Shalki Agarwal. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above
 


Recommended
Solve DSA problems on GfG Practice.

Solve Problems




Like
35
Next
Multiplication of two numbers with shift operator
Related Articles
1.
Multiply two integers without using multiplication, division and bitwise operators, and no loops
2.
Calculate Bitwise OR of two integers from their given Bitwise AND and Bitwise XOR values
3.
Multiply a number by 15 without using * and / operators
4.
Total pairs in an array such that the bitwise AND, bitwise OR and bitwise XOR of LSB is 1
5.
Maximize count of pairs whose Bitwise AND exceeds Bitwise XOR by replacing such pairs with their Bitwise AND
6.
Multiply any Number with 4 using Bitwise Operator
7.
Compute maximum of two integers in C/C++ using Bitwise Operators
8.
C++ Program To Multiply Two Numbers Represented By Linked Lists
9.
Java Program To Multiply Two Numbers Represented By Linked Lists
10.
Python Program To Multiply Two Numbers Represented By Linked Lists
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Easy
Easy
Normal
Medium
Hard
Expert
Improved By :
Smitha Dinesh Semwal
jit_t
noob2000
subham348
Article Tags :
Bit Magic
DSA
Mathematical
Practice Tags :
Bit Magic
Mathematical