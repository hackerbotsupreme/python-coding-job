Check if a given number is sparse or not

Difficulty Level : Medium
Last Updated : 10 Nov, 2022
Read
Discuss(20+)
Courses
Practice
Video
Write a function to check if a given number is Sparse or not.

A number is said to be a sparse number if in the binary representation of the number no two or more consecutive bits are set.

Example: 

Input:  x  = 72
Output: true
Explanation:  Binary representation of 72 is 01001000. 
There are no two consecutive 1’s in binary representation

Input:  x  = 12
Output: false
Explanation:  Binary representation of 12 is 1100. 
Third and fourth bits (from end) are set.

Naive Approach:  The idea is to check the consecutive bits of the number until the number becomes 0.

C++
Java
Python3
# Python Code to Check if a given
# number is sparse or not
def isSparse(n):
    if (n == 1):
        return true
    global prev
    while(n > 0):
        prev = n & 1
        n = n >> 1
        curr = n & 1
        if(prev == curr and prev == 1):
            return False
        prev = curr
 
    return True
 
# Driver code
n = 100
if (isSparse(n)):
    print("Sparse")
 
else:
    print("Not Sparse")
 
# This code is contributed by karandeep1234
C#
Javascript
Output


Not Sparse
Time Complexity: O(Log2n)
Auxiliary Space: O(1)

Efficient Approach: To solve the problem follow the below idea:

If we observe carefully, then we can notice that if we can use bitwise AND of the binary representation of the “given number, then it’s “right-shifted number”(i.e., half the given number) to figure out whether the number is sparse or not. The result of AND operator would be 0 if the number is sparse and non-zero if not sparse.


 

Below is the implementation of the above approach:

C++
Java
Python3
# Python program to check
# if n is sparse or not
 
# Return true if n is
# sparse, else false
 
 
def checkSparse(n):
 
    # n is not sparse if there is set
    # in AND of n and n/2
    if (n & (n >> 1)):
        return 0
 
    return 1
 
 
# Driver code
if __name__ == "__main__":
 
    # Function call
    print(checkSparse(72))
    print(checkSparse(12))
    print(checkSparse(2))
    print(checkSparse(30))
 
# This code is contributed
# by Anant Agarwal.
C#
PHP
Javascript
Output
1
0
1
0
Time Complexity: O(1)
Auxiliary Space: O(1)

Note: Instead of the right shift, we could have used the left shift also, but the left shift might lead to an overflow in some cases.

This article is contributed by Vimal Vestron. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above





Like
20
Previous
Length of the Longest Consecutive 1s in Binary Representation
Next
Find the maximum subset XOR of a given set
Related Articles
1.
Find Next Sparse Number
2.
Check whether the given number is Wagstaff prime or not
3.
Check whether the binary equivalent of a number ends with given string or not
4.
Check if there are T number of continuous of blocks of 0s or not in given Binary Matrix
5.
Check if a number is power of 8 or not
6.
Check whether bitwise AND of a number with any subset of an array is zero or not
7.
Check if the Xor of the frequency of all digits of a number N is zero or not
8.
Check whether the binary equivalent of a number ends with "001" or not
9.
Check whether all the bits are unset in the given range or not
10.
Check if a cycle of length 3 exists or not in a graph that satisfy a given condition
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
Sam007
jit_t
decode2207
souravmahato348
germanshephered48
atharvvvv
janardansthox
10r1f65l
garg28harsh
karandeep1234
sagartomar9927
Article Tags :
Bit Magic
Practice Tags :
Bit Magic