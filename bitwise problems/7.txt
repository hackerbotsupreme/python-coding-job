Binary representation of a given number

Difficulty Level : Easy
Last Updated : 06 Dec, 2022
Read
Discuss(70+)
Courses
Practice
Video
Write a program to print Binary representation of a given number. 

Recommended Practice
Binary representation
Try It!
Source: Microsoft Interview Set-3 

Method 1: Iterative 
For any number, we can check whether its ‘i’th bit is 0(OFF) or 1(ON) by bitwise ANDing it with “2^i” (2 raise to i). 

1) Let us take number 'NUM' and we want to check whether it's 0th bit is ON or OFF    
    bit = 2 ^ 0 (0th bit)
    if  NUM & bit >= 1 means 0th bit is ON else 0th bit is OFF

2) Similarly if we want to check whether 5th bit is ON or OFF    
    bit = 2 ^ 5 (5th bit)
    if NUM & bit >= 1 means its 5th bit is ON else 5th bit is OFF.
Let us take unsigned integer (32 bit), which consist of 0-31 bits. To print binary representation of unsigned integer, start from 31th bit, check whether 31th bit is ON or OFF, if it is ON print “1” else print “0”. Now check whether 30th bit is ON or OFF, if it is ON print “1” else print “0”, do this for all bits from 31 to 0, finally we will get binary representation of number.

C++
C
Java
Python3
def bin(n) :
     
    i = 1 << 31
    while(i > 0) :
     
        if((n & i) != 0) :
         
            print("1", end = "")
         
        else :
            print("0", end = "")
             
        i = i // 2
             
bin(7)
print()
bin(4)
 
# This code is contributed by divyeshrabadiya07.
C#
Javascript
Output
00000000000000000000000000000111
00000000000000000000000000000100
Time Complexity: O(1)
Auxiliary Space: O(1)

Method 2: Recursive 
Following is recursive method to print binary representation of ‘NUM’. 



step 1) if NUM > 1
    a) push NUM on stack
    b) recursively call function with 'NUM / 2'
step 2)
    a) pop NUM from stack, divide it by 2 and print it's remainder.
C++
C
Java
Python3
# Python3 Program for the binary
# representation of a given number
 
 
def bin(n):
 
    if n > 1:
        bin(n//2)
 
    print(n % 2, end="")
 
 
# Driver Code
if __name__ == "__main__":
 
    bin(7)
    print()
    bin(4)
 
# This code is contributed by ANKITRAI1
C#
PHP
Javascript
Output
111
100
Time Complexity: O(log N)
Auxiliary Space: O(log N)

Method 3: Recursive using bitwise operator 
Steps to convert decimal number to its binary representation are given below: 

step 1: Check n > 0
step 2: Right shift the number by 1 bit and recursive function call
step 3: Print the bits of number
C++
Java
Python3
# Python 3 implementation of above approach
 
# Function to convert decimal to
# binary number
 
 
def bin(n):
 
    if (n > 1):
        bin(n >> 1)
    print(n & 1, end="")
 
 
# Driver code
bin(131)
print()
bin(3)
 
# This code is contributed by PrinciRaj1992
C#
PHP
Javascript
Output
10000011
11
Time Complexity: O(log N)
Auxiliary Space: O(log N)

Method 4: Using Bitset of C++

We can use the bitset class of C++ to store the binary representation of any number (positive as well as a negative number). It offers us the flexibility to have the number of bits of our desire, like whether we want to have 32-bit binary representation of just an 8-bit representation of a number.

A complete guide to using bitset can be found on this gfg article LINK.

C++
#include <bits/stdc++.h>
using namespace std;
 
int main()
{
 
    int n = 5, m = -5;
    bitset<8> b(n);
    bitset<8> b1(m);
    cout << "Binary of 5:" << b << endl;
    cout << "Binary of -5:" << b1 << endl;
    return 0;
}
Output
Binary of 5:00000101
Binary of -5:11111011
Time Complexity: O(1)
Auxiliary Space: O(1)

Method 5: Using Inbuilt library:

C++
Java
Python3
def binary(num):
    return int(bin(num).split('0b')[1])
 
if __name__ == "__main__" :
    x = 10
    binary_x = binary(x)
    print("the binary number is :",binary_x)
 
# This code is contributed by Rishika Gupta.
C#
Javascript
Output
1010
Time Complexity: O(1)
Auxiliary Space: O(1)

Video tutorial



Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.
This article is compiled by Narendra Kangralkar. 





Like
56
Next
Bitwise Operators in C/C++
Related Articles
1.
Number of leading zeros in binary representation of a given number
2.
Check if the binary representation of a number has equal number of 0s and 1s in blocks
3.
Count number of trailing zeros in Binary representation of a number using Bitset
4.
Check if binary representation of a given number and its complement are anagram
5.
Check if given number contains only “01” and “10” as substring in its binary representation
6.
Count trailing zeroes present in binary representation of a given number using XOR
7.
Find the n-th number whose binary representation is a palindrome
8.
Binary representation of previous number
9.
Largest number with binary representation is m 1's and m-1 0's
10.
Check if actual binary representation of a number is palindrome
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Easy
Easy
Normal
Medium
Hard
Expert
Improved By :
TheNaiveKid
ankthon
ukasp
Shivi_Aggarwal
jit_t
princiraj1992
Akanksha_Rai
rishikagupta1999
shigupta1999
divyeshrabadiya07
divyesh072019
avanitrachhadiya2155
surbhityagi15
souravghosh0416
rag2127
mukesh07
arun singh
amitmachhiwal
tr_abhishek
sanjoy_62
code_hunt
satyam00so
phasing17
singhh3010
surinderdawra388
sayanc170
hkdass001
Article Tags :
Microsoft
Bit Magic
Practice Tags :
Microsoft
Bit Magic