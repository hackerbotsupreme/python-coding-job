Check if a large number is divisible by 4 or not

Difficulty Level : Easy
Last Updated : 24 Jan, 2023
Read
Discuss
Courses
Practice
Video
Given a number, the task is to check if a number is divisible by 4 or not. The input number may be large and it may not be possible to store even if we use long long int.
Examples:  

Input : n = 1124
Output : Yes

Input  : n = 1234567589333862
Output : No

Input  : n = 363588395960667043875487
Output : No
Recommended Practice
Check if divisible by 4
Try It!
Since input number may be very large, we cannot use n % 4 to check if a number is divisible by 4 or not, especially in languages like C/C++. The idea is based on following fact.

A number is divisible by 4 if number formed by last two digits of it is divisible by 4.

Illustration: 

For example, let us consider 76952 
Number formed by last two digits = 52
Since 52 is divisible by 4, answer is YES.
How does this work? 

Let us consider 76952, we can write it as
76942 = 7*10000 + 6*1000 + 9*100 + 5*10 + 2

The proof is based on below observation:
Remainder of 10i divided by 4 is 0 if i greater 
than or equal to two. Note than 100, 1000,
... etc lead to remainder 0 when divided by 4.

So remainder of "7*10000 + 6*1000 + 9*100 + 
5*10 + 2" divided by 4 is equivalent to remainder 
of following : 
0 + 0 + 0 + 5*10 + 2 = 52
Therefore we can say that the whole number is 
divisible by 4 if 52 is divisible by 4.
Below is implementation of above idea :

C++
Java
Python3
# Python 3 program to find
# if a number is divisible
# by 4 or not
 
# Function to find that
# number divisible by
# 4 or not
 
 
def check(st):
    n = len(st)
 
    # Empty string
    if (n == 0):
        return False
 
    # If there is single
    # digit
    if (n == 1):
        return ((st[0] - '0') % 4 == 0)
 
    # If number formed by
    # last two digits is
    # divisible by 4.
    last = (int)(st[n - 1])
    second_last = (int)(st[n - 2])
 
    return ((second_last * 10 + last) % 4 == 0)
 
 
# Driver code
st = "76952"
 
# Function call
if(check(st)):
    print("Yes")
else:
    print("No ")
 
# This code is contributed by Nikita tiwari
C#
PHP
Javascript
Output
Yes
Time Complexity: O(1), as we are not using any loops for traversing.

Auxiliary Space: O(1), as we are not using any extra space. 

Method 2: Checking given number is divisible by 4 or not by using the modulo division operator “%”. 

C++
Java
Python3
# Python code
# To check whether the given number is divisible by 4 or not
 
#input
n=1234567589333862
# the above input can also be given as n=input() -> taking input from user
# finding given number is divisible by 4 or not
if int(n)%4==0:
  print("Yes")
else:
  print("No")
 
  # this code is contributed by gangarajula laxmi
C#
Javascript
PHP
Output
No
Time Complexity: O(1), as we are not using any loops for traversing.
Auxiliary Space: O(1), as we are not using any extra space. 

Method 3: Use of inbuilt function Atoi() in C++.
The atoi() function in C++ takes a string (which represents an integer) as an argument and returns its value of type int. So basically the function is used to convert a string argument to an integer.

Syntax:  

int atoi(const char str)
Parameters: The function accepts one parameter str which refers to the string argument that is needed to be converted into its integer equivalent.

Return Value: If str is a valid input, then the function returns the equivalent integer number for the passed string number. If no valid conversion takes place, then the function returns zero.

Implementation

C++
Java
Python3
# Python3 program to find if a number is divisible by
# 4 or not
 
# Driver code
str = "76952";
n = len(str);
ch = ["", ""]
 
if (n >= 2):
    ch[0] = str[n - 2]
    ch[1] = str[n - 1]
 
elif (n == 1):
    ch[0] = '0';
    ch[1] = str[0];
 
x = int("".join(ch));
if (x % 4 == 0):
    print("YES");
 
else:
    print("NO");
 
 
# This code is contributed by phasing17
C#
Javascript
Output
YES
Time Complexity: O(1), as we are not using any loops for traversing.
Auxiliary Space: O(1), as we are not using any extra space. 

Method 4: (Using substring function)

Use substring function to get the last two characters of the string.
Convert the string to integer
Check if it is divisible by 4 or not, using (number%4 == 0).
This approach is contributed by Abhijeet Kumar.

Below is the implementation of the above approach:

C++
Java
Python3
# Python 3 program to find
# if a number is divisible
# by 4 or not
 
# Function to find that
# number divisible by
# 4 or not
def check(st):
    n = len(st)
 
    # Empty string
    if (n == 0):
        return False
 
    # int(string_variable) is used in Python3
    # to convert string to integer
 
    # If there is single
    # digit
    if (n == 1):
        return (int(st) % 4 == 0)
 
    # slicing of strings is used in Python to function as substring
    st = st[n-2:]
    # If number formed by
    # last two digits is
    # divisible by 4.
    return (int(st) % 4 == 0)
 
 
# Driver code
st = "76952"
 
# Function call
if(check(st)):
    print("Yes")
else:
    print("No ")
 
# This code is contributed by Abhijeet Kumar(abhijeet19403)
C#
Javascript
Output
Yes
Time Complexity: (1), substring function takes O(n) time, where n is the length of the substring and as here n is equal to 2 thus the time complexity is constant.
Auxiliary Space: O(1), As constant extra space is used.

This article is contributed by Aarti_Rathi and DANISH_RAZA . If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.



Like
Previous
Check if a large number is divisible by 3 or not
Next
Check divisibility by 7
Related Articles
1.
Check if a large number is divisible by 8 or not
2.
Check if a large number is divisible by 6 or not
3.
Check if a large number is divisible by 5 or not
4.
Check a large number is divisible by 16 or not
5.
Check if a large number is divisible by 13 or not
6.
Check if the large number formed is divisible by 41 or not
7.
Check if any large number is divisible by 19 or not
8.
Check if any large number is divisible by 17 or not
9.
Check if a large number is divisible by 2, 3 and 5 or not
10.
Check if a large number is divisible by 75 or not
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Easy
Easy
Normal
Medium
Hard
Expert
Improved By :
nitin mittal
jit_t
ManasChhabra2
bunnyram19
rohitsingh07052
laxmigangarajula03
sachinvinod1904
abhijeet19403
lokeshpotta20
uomkar369
satwik4409
phasing17
noviced3vq6
uppalasrik9mg
Article Tags :
divisibility
large-numbers
number-digits
Mathematical
Strings
Practice Tags :
Mathematical
Strings
Report Issue