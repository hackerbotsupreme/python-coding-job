Count digits in a factorial using Logarithm

Difficulty Level : Medium
Last Updated : 11 Jan, 2023
Read
Discuss
Courses
Practice
Video
Given an integer N, find the number of digits that appear in its factorial, where factorial is defined as, factorial(n) = 1*2*3*4……..*n and factorial(0) = 1

Examples : 

Input:  5
Output: 3
Explanation: 5! = 120, i.e., 3 digits

Input: 10
Output: 7
Explanation: 10! = 3628800, i.e., 7 digits
 

Recommended Practice
Please try your approach on IDE first, before
moving on to the solution.
Try It!
Naive approach: To solve the problem follow the below idea:

A naive solution would be to calculate the n! first and then calculate the number of digits present in it. However as the value for n! can be very large, it would become cumbersome to store them in a variable (Unless you’re working in python!). 

Count digits in a factorial using the property of logarithms:
To solve the problem follow the below idea:



We know,
log(a*b) = log(a) + log(b)

Therefore
log( n! ) = log(1*2*3……. * n) = log(1) + log(2) + …….. +log(n)

Now, observe that the floor value of log base 
10 increased by 1, of any number, gives the
number of digits present in that number.
Hence, output would be : floor(log(n!)) + 1.

Below is the implementation of the above approach:

C++
Java
Python3
# Python3 program to find the
# number of digits in a factorial
import math
  
# This function receives an integer
# n, and returns the number of
# digits present in n!
  
  
def findDigits(n):
  
    # factorial exists only for n>=0
    if (n < 0):
        return 0
  
    # base case
    if (n <= 1):
        return 1
  
    # else iterate through n and
    # calculate the value
    digits = 0
    for i in range(2, n + 1):
        digits += math.log10(i)
  
    return math.floor(digits) + 1
  
  
# Driver code
if __name__ == "__main__":
  print(findDigits(1))
  print(findDigits(5))
  print(findDigits(10))
  print(findDigits(120))
  
# This code is contributed by mits
C#
PHP
Javascript
Output
1
3
7
199
Time complexity: O(N log N) since calculating log in a loop
Auxiliary space: O(1) because it is using constant variables

In the next set, we’d see how to further optimize our approach and reduce the time complexity for the same program.
This article is contributed by Ashutosh Kumar . If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.
Please write comments if you find anything incorrect, or if you want to share more information about the topic discussed above.
 





Like
60
Previous
Check if a number is a Krishnamurthy Number or not
Next
Count factorial numbers in a given range
Related Articles
1.
Find the last digit when factorial of A divides factorial of B
2.
Count digits in a factorial using Kamenetsky's Formula
3.
Discrete logarithm (Find an integer k such that a^k is congruent modulo b)
4.
Iterated Logarithm log*(n)
5.
Logarithm
6.
Logarithm tricks for Competitive Programming
7.
Smallest number with at least n digits in factorial
8.
Find sum of digits in factorial of a number
9.
Number of digits in N factorial to the power N
10.
Find the last two digits of Factorial of a given Number
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
GeeksforGeeks
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
Smitha Dinesh Semwal
jit_t
Mithun Kumar
mayanktyagi1709
technophpfij
himanshiyadav7011
janardansthox
Article Tags :
factorial
number-digits
Mathematical
Practice Tags :
factorial
Mathematical