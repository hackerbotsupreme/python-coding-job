Find maximum power of a number that divides a factorial

Difficulty Level : Medium
Read
Discuss
Courses
Practice
Video
Given two numbers, fact and n, find the largest power of n that divides fact! (Factorial of fact).

Examples: 

Input : 
fact = 5, n = 2
Output : 
3
Explanation:
Value of 5! is 120. The largest power
of 2 that divides 120 is 8 (or 23

Input : 
fact = 146, n = 15
Output : 
35
Recommended: Please try your approach on {IDE} first, before moving on to the solution.
The idea is based on Legendre’s formula which finds largest power of a prime number that divides fact!. We find all prime factors of n. For every prime factor we find largest power of it that divides fact!. Finally we return minimum of all found powers. 

Illustration :

fact = 146, n=15
First find the prime factor of 15 that are 3 
and 5 then first divide with 3 and add i.e.

Applying Legendre’s formula for prime
factor 3.
[146/3]+[48/3]+[16/3]+[5/3]+[1/3] = 70
   48  +   16  +  5  +  1  +  0   = 70
There is 70 is maximum power of 3 prime number.
146! is divisible by 3^70 which is maximum. 

Applying Legendre’s formula for prime
factor 5.
[146/5]+[29/5]+[5/5]+[1/5] = 35
   29  +   5  +  1  +  0   = 35
There is 35 is maximum power of 5 prime
number.
Minimum of two powers is 35 which is our answer.
Note : If multiple powers of a prime factor are present in n, then we divide the count to get the maximum power value for this factor. 

Below is the implementation of the above approach:

C++
Java
Python3
# Python program to find largest power of
# a number (which may be composite) that
# divides factorial.
import math
 
# For find maximum power of prime number
# p which can divide fact number
 
 
def findPowerPrime(fact, p):
    res = 0
    while fact:
        res += fact // p
        fact //= p
 
    return res
 
# Returns sum of all factors of n
 
 
def findPowerComposite(fact, n):
 
    # To store result (minimum power of a
    # prime factor that divides fact! )
    res = math.inf
 
    # Traverse through all prime factors
    # of n.
    for i in range(2, int(n**0.5) + 1):
 
        # Counter for count the
        # power of prime number
        count = 0
        if not n % i:
            count += 1
            n = n // i
 
        if count:
 
            # Maximum power of i that divides
            # fact!. We divide by count to handle
            # multiple occurrences of a prime factor.
            curr_pow = findPowerPrime(fact, i) // count
            res = min(res, curr_pow)
 
    # This condition is to handle
    # the case when n is a prime
    # number greater than 2.
    if n >= 2:
        curr_pow = findPowerPrime(fact, n)
        res = min(res, curr_pow)
 
    return res
 
 
# Driver code
fact = 146
n = 5
 
# Function Call
print(findPowerComposite(fact, n))
 
 
# This code is contributed by Ansu Kumari
C#
PHP
Javascript
Output


35
Time Complexity: O(sqrt(n)*log(n))
Auxiliary Space: O(1), as no extra space is used





Like
3
Previous
Legendre's formula (Given p and n, find the largest x such that p^x divides n!)
Next
Write an iterative O(Log y) function for pow(x, y)
Related Articles
1.
Find the last digit when factorial of A divides factorial of B
2.
Find two co-prime integers such that the first divides A and the second divides B
3.
Count of triplets (a, b, c) in the Array such that a divides b and b divides c
4.
Highest power of a number that divides other number
5.
Highest power of a number that divides other number | Set - 2
6.
Highest power of 2 that divides a number represented in binary
7.
Count of pairs in an array such that the highest power of 2 that divides their product is 1
8.
Highest power of 2 that divides the LCM of first N Natural numbers.
9.
Find a number that divides maximum array elements
10.
Find integers that divides maximum number of elements of the array
Article Contributed By :
https://media.geeksforgeeks.org/auth/avatar.png
DevanshuAgarwal
@DevanshuAgarwal
Vote for difficulty
Current difficulty : Medium
Easy
Normal
Medium
Hard
Expert
Improved By :
manishshaw1
kaustubhgarg
_saurabh_jaiswal
singhh3010
Article Tags :
factorial
number-theory
Prime Number
prime-factor
Mathematical
Practice Tags :
factorial
Mathematical
number-theory
Prime Number
Improve Article
Report Issue